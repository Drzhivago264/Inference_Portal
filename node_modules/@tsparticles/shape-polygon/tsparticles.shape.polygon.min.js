/*! For license information please see tsparticles.shape.polygon.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var n="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},n={};function o(e){var r=n[e];if(void 0!==r)return r.exports;var a=n[e]={exports:{}};return t[e](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var r={};return(()=>{o.r(r),o.d(r,{loadGenericPolygonShape:()=>d,loadPolygonShape:()=>c,loadTriangleShape:()=>u});var e=o(303);const t=0,n=0;class a{draw(o){const{particle:r,radius:a}=o;!function(o,r,a){const{context:i}=o,s=a.count.numerator*a.count.denominator,d=a.count.numerator/a.count.denominator,u=180*(d-2)/d,c=Math.PI-(0,e.degToRad)(u);if(i){i.beginPath(),i.translate(r.x,r.y),i.moveTo(t,n);for(let e=0;e<s;e++)i.lineTo(a.length,n),i.translate(a.length,n),i.rotate(c)}}(o,this.getCenter(r,a),this.getSidesData(r,a))}getSidesCount(t){const n=t.shapeData;return Math.round((0,e.getRangeValue)(n?.sides??5))}}class i extends a{constructor(){super(...arguments),this.validTypes=["polygon"]}getCenter(e,t){return{x:-t/(e.sides/3.5),y:-t/.76}}getSidesData(e,t){const n=e.sides;return{count:{denominator:1,numerator:n},length:2.66*t/(n/3)}}}class s extends a{constructor(){super(...arguments),this.validTypes=["triangle"]}getCenter(e,t){return{x:-t,y:t/1.66}}getSidesCount(){return 3}getSidesData(e,t){return{count:{denominator:2,numerator:3},length:2*t}}}async function d(e,t=!0){await e.addShape(new i,t)}async function u(e,t=!0){await e.addShape(new s,t)}async function c(e,t=!0){await d(e,t),await u(e,t)}})(),r})()));