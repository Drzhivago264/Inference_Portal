/*! For license information please see tsparticles.interaction.particles.collisions.min.js.LICENSE.txt */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],o);else{var i="object"==typeof exports?o(require("@tsparticles/engine")):o(e.window);for(var t in i)("object"==typeof exports?exports:e)[t]=i[t]}}(this,(e=>(()=>{var o={303:o=>{o.exports=e}},i={};function t(e){var s=i[e];if(void 0!==s)return s.exports;var n=i[e]={exports:{}};return o[e](n,n.exports,t),n.exports}t.d=(e,o)=>{for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},t.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};return(()=>{t.r(s),t.d(s,{loadParticlesCollisionsInteraction:()=>u});var e=t(303);const o=.5,i=10,n=0;function r(t,s,r,a,l,c){const d=(0,e.clamp)(t.options.collisions.absorb.speed*l.factor/i,n,a);t.size.value+=d*o,r.size.value-=d,a<=c&&(r.size.value=0,r.destroy())}const a=o=>{void 0===o.collisionMaxSpeed&&(o.collisionMaxSpeed=(0,e.getRangeValue)(o.options.collisions.maxSpeed)),o.velocity.length>o.collisionMaxSpeed&&(o.velocity.length=o.collisionMaxSpeed)};function l(o,i){(0,e.circleBounce)((0,e.circleBounceDataFromParticle)(o),(0,e.circleBounceDataFromParticle)(i)),a(o),a(i)}function c(o,i,t,s){switch(o.options.collisions.mode){case e.CollisionMode.absorb:!function(e,o,i,t){const s=e.getRadius(),n=o.getRadius();void 0===s&&void 0!==n?e.destroy():void 0!==s&&void 0===n?o.destroy():void 0!==s&&void 0!==n&&(s>=n?r(e,0,o,n,i,t):r(o,0,e,s,i,t))}(o,i,t,s);break;case e.CollisionMode.bounce:l(o,i);break;case e.CollisionMode.destroy:!function(e,o){e.unbreakable||o.unbreakable||l(e,o),void 0===e.getRadius()&&void 0!==o.getRadius()?e.destroy():void 0!==e.getRadius()&&void 0===o.getRadius()?o.destroy():void 0!==e.getRadius()&&void 0!==o.getRadius()&&(e.getRadius()>=o.getRadius()?o:e).destroy()}(o,i)}}class d extends e.ParticlesInteractorBase{constructor(e){super(e)}clear(){}init(){}interact(o,i){if(o.destroyed||o.spawning)return;const t=this.container,s=o.getPosition(),n=o.getRadius(),r=t.particles.quadTree.queryCircle(s,2*n);for(const a of r){if(o===a||!a.options.collisions.enable||o.options.collisions.mode!==a.options.collisions.mode||a.destroyed||a.spawning)continue;const r=a.getPosition(),l=a.getRadius();if(Math.abs(Math.round(s.z)-Math.round(r.z))>n+l)continue;(0,e.getDistance)(s,r)>n+l||c(o,a,i,t.retina.pixelRatio)}}isEnabled(e){return e.options.collisions.enable}reset(){}}async function u(e,o=!0){await e.addInteractor("particlesCollisions",(e=>Promise.resolve(new d(e))),o)}})(),s})()));