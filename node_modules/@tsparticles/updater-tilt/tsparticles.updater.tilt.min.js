/*! For license information please see tsparticles.updater.tilt.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var i="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var o in i)("object"==typeof exports?exports:e)[o]=i[o]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},i={};function o(e){var n=i[e];if(void 0!==n)return n.exports;var a=i[e]={exports:{}};return t[e](a,a.exports,o),a.exports}o.d=(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{o.r(n),o.d(n,{loadTiltUpdater:()=>c});var e,t=o(303);!function(e){e.clockwise="clockwise",e.counterClockwise="counter-clockwise",e.random="random"}(e||(e={}));class i{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(e){e&&(void 0!==e.enable&&(this.enable=e.enable),void 0!==e.speed&&(this.speed=(0,t.setRangeValue)(e.speed)),void 0!==e.decay&&(this.decay=(0,t.setRangeValue)(e.decay)),void 0!==e.sync&&(this.sync=e.sync))}}class a extends t.ValueWithRandom{constructor(){super(),this.animation=new i,this.direction=e.clockwise,this.enable=!1,this.value=0}load(e){super.load(e),e&&(this.animation.load(e.animation),void 0!==e.direction&&(this.direction=e.direction),void 0!==e.enable&&(this.enable=e.enable))}}const s=2*Math.PI;class r{constructor(e){this.container=e}getTransformValues(e){const t=e.tilt?.enable&&e.tilt;return{b:t?Math.cos(t.value)*t.cosDirection:void 0,c:t?Math.sin(t.value)*t.sinDirection:void 0}}init(i){const o=i.options.tilt;if(!o)return;i.tilt={enable:o.enable,value:(0,t.degToRad)((0,t.getRangeValue)(o.value)),sinDirection:(0,t.getRandom)()>=t.halfRandom?1:-1,cosDirection:(0,t.getRandom)()>=t.halfRandom?1:-1,min:0,max:s};let n=o.direction;if(n===e.random){n=Math.floor(2*(0,t.getRandom)())>0?e.counterClockwise:e.clockwise}switch(n){case e.counterClockwise:case"counterClockwise":i.tilt.status=t.AnimationStatus.decreasing;break;case e.clockwise:i.tilt.status=t.AnimationStatus.increasing}const a=i.options.tilt?.animation;a?.enable&&(i.tilt.decay=1-(0,t.getRangeValue)(a.decay),i.tilt.velocity=(0,t.getRangeValue)(a.speed)/360*this.container.retina.reduceFactor,a.sync||(i.tilt.velocity*=(0,t.getRandom)()))}isEnabled(e){const t=e.options.tilt?.animation;return!e.destroyed&&!e.spawning&&!!t?.enable}loadOptions(e,...t){e.tilt||(e.tilt=new a);for(const i of t)e.tilt.load(i?.tilt)}async update(e,i){this.isEnabled(e)&&e.tilt&&((0,t.updateAnimation)(e,e.tilt,!1,t.DestroyType.none,i),await Promise.resolve())}}async function c(e,t=!0){await e.addParticleUpdater("tilt",(e=>Promise.resolve(new r(e))),t)}})(),n})()));