/*! For license information please see tsparticles.updater.rotate.min.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],t);else{var o="object"==typeof exports?t(require("@tsparticles/engine")):t(e.window);for(var a in o)("object"==typeof exports?exports:e)[a]=o[a]}}(this,(e=>(()=>{var t={303:t=>{t.exports=e}},o={};function a(e){var i=o[e];if(void 0!==i)return i.exports;var n=o[e]={exports:{}};return t[e](n,n.exports,a),n.exports}a.d=(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},a.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var i={};return(()=>{a.r(i),a.d(i,{loadRotateUpdater:()=>s});var e=a(303);class t{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(t){t&&(void 0!==t.enable&&(this.enable=t.enable),void 0!==t.speed&&(this.speed=(0,e.setRangeValue)(t.speed)),void 0!==t.decay&&(this.decay=(0,e.setRangeValue)(t.decay)),void 0!==t.sync&&(this.sync=t.sync))}}class o extends e.ValueWithRandom{constructor(){super(),this.animation=new t,this.direction=e.RotateDirection.clockwise,this.path=!1,this.value=0}load(e){e&&(super.load(e),void 0!==e.direction&&(this.direction=e.direction),this.animation.load(e.animation),void 0!==e.path&&(this.path=e.path))}}const n=2*Math.PI;class r{constructor(e){this.container=e}init(t){const o=t.options.rotate;if(!o)return;t.rotate={enable:o.animation.enable,value:(0,e.degToRad)((0,e.getRangeValue)(o.value)),min:0,max:n},t.pathRotation=o.path;let a=o.direction;if(a===e.RotateDirection.random){a=Math.floor(2*(0,e.getRandom)())>0?e.RotateDirection.counterClockwise:e.RotateDirection.clockwise}switch(a){case e.RotateDirection.counterClockwise:case"counterClockwise":t.rotate.status=e.AnimationStatus.decreasing;break;case e.RotateDirection.clockwise:t.rotate.status=e.AnimationStatus.increasing}const i=o.animation;i.enable&&(t.rotate.decay=1-(0,e.getRangeValue)(i.decay),t.rotate.velocity=(0,e.getRangeValue)(i.speed)/360*this.container.retina.reduceFactor,i.sync||(t.rotate.velocity*=(0,e.getRandom)())),t.rotation=t.rotate.value}isEnabled(e){const t=e.options.rotate;return!!t&&(!e.destroyed&&!e.spawning&&(!!t.value||t.animation.enable||t.path))}loadOptions(e,...t){e.rotate||(e.rotate=new o);for(const o of t)e.rotate.load(o?.rotate)}update(t,o){this.isEnabled(t)&&(t.isRotating=!!t.rotate,t.rotate&&((0,e.updateAnimation)(t,t.rotate,!1,e.DestroyType.none,o),t.rotation=t.rotate.value))}}async function s(e,t=!0){await e.addParticleUpdater("rotate",(e=>Promise.resolve(new r(e))),t)}})(),i})()));