import stampit from 'stampit';
import ResolveStrategy from "../ResolveStrategy.mjs";
import ReferenceSet from "../../../ReferenceSet.mjs";
import { merge as mergeOptions } from "../../../options/util.mjs";
import UnmatchedDereferenceStrategyError from "../../../errors/UnmatchedDereferenceStrategyError.mjs";
const OpenApi2ResolveStrategy = stampit(ResolveStrategy, {
  init() {
    this.name = 'openapi-2';
  },
  methods: {
    canResolve(file, options) {
      const dereferenceStrategy = options.dereference.strategies.find(strategy => strategy.name === 'openapi-2');
      if (dereferenceStrategy === undefined) {
        return false;
      }
      return dereferenceStrategy.canDereference(file, options);
    },
    async resolve(file, options) {
      const dereferenceStrategy = options.dereference.strategies.find(strategy => strategy.name === 'openapi-2');
      if (dereferenceStrategy === undefined) {
        throw new UnmatchedDereferenceStrategyError('"openapi-2" dereference strategy is not available.');
      }
      const refSet = ReferenceSet();
      const mergedOptions = mergeOptions(options, {
        resolve: {
          internal: false
        },
        dereference: {
          refSet
        }
      });
      await dereferenceStrategy.dereference(file, mergedOptions);
      return refSet;
    }
  }
});
export default OpenApi2ResolveStrategy;