"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard").default;
var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault").default;
exports.__esModule = true;
exports.default = void 0;
var _stampit = _interopRequireDefault(require("stampit"));
var _apidomError = require("@swagger-api/apidom-error");
var _Resolver = _interopRequireDefault(require("./Resolver.cjs"));
var url = _interopRequireWildcard(require("../../util/url.cjs"));
const HttpResolver = (0, _stampit.default)(_Resolver.default, {
  props: {
    timeout: 5000,
    redirects: 5,
    withCredentials: false
  },
  init({
    timeout = this.timeout,
    redirects = this.redirects,
    withCredentials = this.withCredentials
  } = {}) {
    this.timeout = timeout;
    this.redirects = redirects;
    this.withCredentials = withCredentials;
  },
  methods: {
    canRead(file) {
      return url.isHttpUrl(file.uri);
    },
    async read() {
      throw new _apidomError.NotImplementedError('read method in HttpResolver stamp is not yet implemented.');
    },
    getHttpClient() {
      throw new _apidomError.NotImplementedError('getHttpClient method in HttpResolver stamp is not yet implemented.');
    }
  }
});
var _default = exports.default = HttpResolver;