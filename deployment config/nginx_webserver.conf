upstream channels-backend {
    server localhost:8000;
}
limit_req_zone $binary_remote_addr zone=limitreqsbyaddr:20m rate=15r/s;
limit_req_status 429;

server {
	listen 80 default_server;
	listen [::]:80 default_server;
    return 301 https://$host$request_uri;   
	}

server {
    include /etc/nginx/mime.types;
    location = /favicon.ico { 
       alias /home/Inference_Portal/staticfiles/image/favicon.ico;
    }

    location /static/ {
        alias /home/Inference_Portal/staticfiles/;
    }

    location / {
        limit_req zone=limitreqsbyaddr;
        proxy_pass http://channels-backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/professorparakeet.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/professorparakeet.com/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    add_header Strict-Transport-Security "max-age=35768000; includeSubDomains; preload" always;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = www.professorparakeet.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = professorparakeet.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 ;
	listen [::]:80 ;
    server_name www.professorparakeet.com professorparakeet.com;
    return 404; # managed by Certbot

}