import { SdkError } from '../../errors';
import { ResponseBase } from './response-base';
/**
 * Parent response type for a create cache request.  The
 * response object is resolved to a type-safe object of one of
 * the following subtypes:
 *
 * - {Success}
 * - {AlreadyExists}
 * - {Error}
 *
 * `instanceof` type guards can be used to operate on the appropriate subtype.
 * @example
 * For example:
 * ```
 * if (response instanceof CreateCache.Error) {
 *   // Handle error as appropriate.  The compiler will smart-cast `response` to type
 *   // `CreateCache.Error` in this block, so you will have access to the properties
 *   // of the Error class; e.g. `response.errorCode()`.
 * }
 * ```
 */
export declare abstract class Response extends ResponseBase {
}
declare class _Success extends Response {
}
declare const Success_base: {
    new (...args: any[]): {
        readonly is_success: boolean;
    };
} & typeof _Success;
/**
 * Indicates a Successful create cache request.
 */
export declare class Success extends Success_base {
}
declare class _Error extends Response {
    protected _innerException: SdkError;
    constructor(_innerException: SdkError);
}
declare const Error_base: {
    new (...args: any[]): {
        _innerException: SdkError;
        message(): string;
        /**
         * Indicates that an error occurred during the create cache request.
         *
         * This response object includes the following fields that you can use to determine
         * how you would like to handle the error:
         *
         * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
         * - `message()` - a human-readable description of the error
         * - `innerException()` - the original error that caused the failure; can be re-thrown.
         */
        innerException(): SdkError;
        errorCode(): import("../../errors").MomentoErrorCode;
        toString(): string;
    };
} & typeof _Error;
/**
 * Indicates that an error occurred during the create cache request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
export declare class Error extends Error_base {
}
/**
 * Indicates that the cache already exists, so there was nothing to do.
 */
export declare class AlreadyExists extends Response {
}
export {};
