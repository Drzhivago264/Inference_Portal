"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Error = exports.Success = exports.Response = void 0;
const signing_key_1 = require("../signing-key");
const response_base_1 = require("./response-base");
/**
 * Parent response type for a list signing keys request.  The
 * response object is resolved to a type-safe object of one of
 * the following subtypes:
 *
 * - {Success}
 * - {Error}
 *
 * `instanceof` type guards can be used to operate on the appropriate subtype.
 * @example
 * For example:
 * ```
 * if (response instanceof ListSigningKeys.Error) {
 *   // Handle error as appropriate.  The compiler will smart-cast `response` to type
 *   // `ListSigningKeys.Error` in this block, so you will have access to the properties
 *   // of the Error class; e.g. `response.errorCode()`.
 * }
 * ```
 */
class Response extends response_base_1.ResponseBase {
}
exports.Response = Response;
class _Success extends Response {
    constructor(endpoint, signingKeys, nextToken) {
        var _a;
        super();
        this.nextToken = nextToken;
        this.signingKeys =
            (_a = signingKeys.map(signingKey => new signing_key_1.SigningKey(signingKey.key, new Date(signingKey.expiresAt * 1000), endpoint))) !== null && _a !== void 0 ? _a : [];
    }
    getNextToken() {
        return this.nextToken;
    }
    getSigningKeys() {
        return this.signingKeys;
    }
}
/**
 * Indicates a Successful list signing keys request.
 */
class Success extends (0, response_base_1.ResponseSuccess)(_Success) {
}
exports.Success = Success;
class _Error extends Response {
    constructor(_innerException) {
        super();
        this._innerException = _innerException;
    }
}
/**
 * Indicates that an error occurred during the list signing keys request.
 *
 * This response object includes the following fields that you can use to determine
 * how you would like to handle the error:
 *
 * - `errorCode()` - a unique Momento error code indicating the type of error that occurred.
 * - `message()` - a human-readable description of the error
 * - `innerException()` - the original error that caused the failure; can be re-thrown.
 */
class Error extends (0, response_base_1.ResponseError)(_Error) {
}
exports.Error = Error;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1zaWduaW5nLWtleXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbWVzc2FnZXMvcmVzcG9uc2VzL2xpc3Qtc2lnbmluZy1rZXlzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdEQUEwQztBQUUxQyxtREFBNkU7QUFHN0U7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWtCRztBQUNILE1BQXNCLFFBQVMsU0FBUSw0QkFBWTtDQUFHO0FBQXRELDRCQUFzRDtBQUV0RCxNQUFNLFFBQVMsU0FBUSxRQUFRO0lBSTdCLFlBQ0UsUUFBZ0IsRUFDaEIsV0FBMEIsRUFDMUIsU0FBa0I7O1FBRWxCLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFdBQVc7WUFDZCxNQUFBLFdBQVcsQ0FBQyxHQUFHLENBQ2IsVUFBVSxDQUFDLEVBQUUsQ0FDWCxJQUFJLHdCQUFVLENBQ1osVUFBVSxDQUFDLEdBQUcsRUFDZCxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxFQUNyQyxRQUFRLENBQ1QsQ0FDSixtQ0FBSSxFQUFFLENBQUM7SUFDWixDQUFDO0lBRU0sWUFBWTtRQUNqQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7SUFDeEIsQ0FBQztJQUVNLGNBQWM7UUFDbkIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7Q0FDRjtBQUVEOztHQUVHO0FBQ0gsTUFBYSxPQUFRLFNBQVEsSUFBQSwrQkFBZSxFQUFDLFFBQVEsQ0FBQztDQUFHO0FBQXpELDBCQUF5RDtBQUV6RCxNQUFNLE1BQU8sU0FBUSxRQUFRO0lBQzNCLFlBQXNCLGVBQXlCO1FBQzdDLEtBQUssRUFBRSxDQUFDO1FBRFksb0JBQWUsR0FBZixlQUFlLENBQVU7SUFFL0MsQ0FBQztDQUNGO0FBRUQ7Ozs7Ozs7OztHQVNHO0FBQ0gsTUFBYSxLQUFNLFNBQVEsSUFBQSw2QkFBYSxFQUFDLE1BQU0sQ0FBQztDQUFHO0FBQW5ELHNCQUFtRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7U2lnbmluZ0tleX0gZnJvbSAnLi4vc2lnbmluZy1rZXknO1xuaW1wb3J0IHtTZGtFcnJvcn0gZnJvbSAnLi4vLi4vZXJyb3JzJztcbmltcG9ydCB7UmVzcG9uc2VCYXNlLCBSZXNwb25zZUVycm9yLCBSZXNwb25zZVN1Y2Nlc3N9IGZyb20gJy4vcmVzcG9uc2UtYmFzZSc7XG5pbXBvcnQge19TaWduaW5nS2V5fSBmcm9tICcuL2dycGMtcmVzcG9uc2UtdHlwZXMnO1xuXG4vKipcbiAqIFBhcmVudCByZXNwb25zZSB0eXBlIGZvciBhIGxpc3Qgc2lnbmluZyBrZXlzIHJlcXVlc3QuICBUaGVcbiAqIHJlc3BvbnNlIG9iamVjdCBpcyByZXNvbHZlZCB0byBhIHR5cGUtc2FmZSBvYmplY3Qgb2Ygb25lIG9mXG4gKiB0aGUgZm9sbG93aW5nIHN1YnR5cGVzOlxuICpcbiAqIC0ge1N1Y2Nlc3N9XG4gKiAtIHtFcnJvcn1cbiAqXG4gKiBgaW5zdGFuY2VvZmAgdHlwZSBndWFyZHMgY2FuIGJlIHVzZWQgdG8gb3BlcmF0ZSBvbiB0aGUgYXBwcm9wcmlhdGUgc3VidHlwZS5cbiAqIEBleGFtcGxlXG4gKiBGb3IgZXhhbXBsZTpcbiAqIGBgYFxuICogaWYgKHJlc3BvbnNlIGluc3RhbmNlb2YgTGlzdFNpZ25pbmdLZXlzLkVycm9yKSB7XG4gKiAgIC8vIEhhbmRsZSBlcnJvciBhcyBhcHByb3ByaWF0ZS4gIFRoZSBjb21waWxlciB3aWxsIHNtYXJ0LWNhc3QgYHJlc3BvbnNlYCB0byB0eXBlXG4gKiAgIC8vIGBMaXN0U2lnbmluZ0tleXMuRXJyb3JgIGluIHRoaXMgYmxvY2ssIHNvIHlvdSB3aWxsIGhhdmUgYWNjZXNzIHRvIHRoZSBwcm9wZXJ0aWVzXG4gKiAgIC8vIG9mIHRoZSBFcnJvciBjbGFzczsgZS5nLiBgcmVzcG9uc2UuZXJyb3JDb2RlKClgLlxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBSZXNwb25zZSBleHRlbmRzIFJlc3BvbnNlQmFzZSB7fVxuXG5jbGFzcyBfU3VjY2VzcyBleHRlbmRzIFJlc3BvbnNlIHtcbiAgcHJpdmF0ZSByZWFkb25seSBuZXh0VG9rZW4/OiBzdHJpbmc7XG4gIHByaXZhdGUgcmVhZG9ubHkgc2lnbmluZ0tleXM6IFNpZ25pbmdLZXlbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBlbmRwb2ludDogc3RyaW5nLFxuICAgIHNpZ25pbmdLZXlzOiBfU2lnbmluZ0tleVtdLFxuICAgIG5leHRUb2tlbj86IHN0cmluZ1xuICApIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMubmV4dFRva2VuID0gbmV4dFRva2VuO1xuICAgIHRoaXMuc2lnbmluZ0tleXMgPVxuICAgICAgc2lnbmluZ0tleXMubWFwKFxuICAgICAgICBzaWduaW5nS2V5ID0+XG4gICAgICAgICAgbmV3IFNpZ25pbmdLZXkoXG4gICAgICAgICAgICBzaWduaW5nS2V5LmtleSxcbiAgICAgICAgICAgIG5ldyBEYXRlKHNpZ25pbmdLZXkuZXhwaXJlc0F0ICogMTAwMCksXG4gICAgICAgICAgICBlbmRwb2ludFxuICAgICAgICAgIClcbiAgICAgICkgPz8gW107XG4gIH1cblxuICBwdWJsaWMgZ2V0TmV4dFRva2VuKCkge1xuICAgIHJldHVybiB0aGlzLm5leHRUb2tlbjtcbiAgfVxuXG4gIHB1YmxpYyBnZXRTaWduaW5nS2V5cygpIHtcbiAgICByZXR1cm4gdGhpcy5zaWduaW5nS2V5cztcbiAgfVxufVxuXG4vKipcbiAqIEluZGljYXRlcyBhIFN1Y2Nlc3NmdWwgbGlzdCBzaWduaW5nIGtleXMgcmVxdWVzdC5cbiAqL1xuZXhwb3J0IGNsYXNzIFN1Y2Nlc3MgZXh0ZW5kcyBSZXNwb25zZVN1Y2Nlc3MoX1N1Y2Nlc3MpIHt9XG5cbmNsYXNzIF9FcnJvciBleHRlbmRzIFJlc3BvbnNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIF9pbm5lckV4Y2VwdGlvbjogU2RrRXJyb3IpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG5cbi8qKlxuICogSW5kaWNhdGVzIHRoYXQgYW4gZXJyb3Igb2NjdXJyZWQgZHVyaW5nIHRoZSBsaXN0IHNpZ25pbmcga2V5cyByZXF1ZXN0LlxuICpcbiAqIFRoaXMgcmVzcG9uc2Ugb2JqZWN0IGluY2x1ZGVzIHRoZSBmb2xsb3dpbmcgZmllbGRzIHRoYXQgeW91IGNhbiB1c2UgdG8gZGV0ZXJtaW5lXG4gKiBob3cgeW91IHdvdWxkIGxpa2UgdG8gaGFuZGxlIHRoZSBlcnJvcjpcbiAqXG4gKiAtIGBlcnJvckNvZGUoKWAgLSBhIHVuaXF1ZSBNb21lbnRvIGVycm9yIGNvZGUgaW5kaWNhdGluZyB0aGUgdHlwZSBvZiBlcnJvciB0aGF0IG9jY3VycmVkLlxuICogLSBgbWVzc2FnZSgpYCAtIGEgaHVtYW4tcmVhZGFibGUgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yXG4gKiAtIGBpbm5lckV4Y2VwdGlvbigpYCAtIHRoZSBvcmlnaW5hbCBlcnJvciB0aGF0IGNhdXNlZCB0aGUgZmFpbHVyZTsgY2FuIGJlIHJlLXRocm93bi5cbiAqL1xuZXhwb3J0IGNsYXNzIEVycm9yIGV4dGVuZHMgUmVzcG9uc2VFcnJvcihfRXJyb3IpIHt9XG4iXX0=