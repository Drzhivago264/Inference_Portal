"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VectorSimilarityMetric = void 0;
/**
 * The similarity metric to use when comparing vectors in the index.
 */
var VectorSimilarityMetric;
(function (VectorSimilarityMetric) {
    /**
     * The cosine similarity between two vectors, ie the cosine of the angle between them.
     * Bigger is better. Ranges from -1 to 1.
     */
    VectorSimilarityMetric["COSINE_SIMILARITY"] = "COSINE_SIMILARITY";
    /**
     * The inner product between two vectors, ie the sum of the element-wise products.
     * Bigger is better. Ranges from 0 to infinity.
     */
    VectorSimilarityMetric["INNER_PRODUCT"] = "INNER_PRODUCT";
    /**
     * The Euclidean distance squared between two vectors, ie the sum of squared differences between each element.
     * Smaller is better. Ranges from 0 to infinity.
     */
    VectorSimilarityMetric["EUCLIDEAN_SIMILARITY"] = "EUCLIDEAN_SIMILARITY";
})(VectorSimilarityMetric = exports.VectorSimilarityMetric || (exports.VectorSimilarityMetric = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSVZlY3RvckluZGV4Q29udHJvbENsaWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9pbnRlcm5hbC9jbGllbnRzL3ZlY3Rvci9JVmVjdG9ySW5kZXhDb250cm9sQ2xpZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU1BOztHQUVHO0FBQ0gsSUFBWSxzQkFrQlg7QUFsQkQsV0FBWSxzQkFBc0I7SUFDaEM7OztPQUdHO0lBQ0gsaUVBQXVDLENBQUE7SUFFdkM7OztPQUdHO0lBQ0gseURBQStCLENBQUE7SUFFL0I7OztPQUdHO0lBQ0gsdUVBQTZDLENBQUE7QUFDL0MsQ0FBQyxFQWxCVyxzQkFBc0IsR0FBdEIsOEJBQXNCLEtBQXRCLDhCQUFzQixRQWtCakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDcmVhdGVWZWN0b3JJbmRleCxcbiAgRGVsZXRlVmVjdG9ySW5kZXgsXG4gIExpc3RWZWN0b3JJbmRleGVzLFxufSBmcm9tICcuLi8uLi8uLi9tZXNzYWdlcy9yZXNwb25zZXMvdmVjdG9yJztcblxuLyoqXG4gKiBUaGUgc2ltaWxhcml0eSBtZXRyaWMgdG8gdXNlIHdoZW4gY29tcGFyaW5nIHZlY3RvcnMgaW4gdGhlIGluZGV4LlxuICovXG5leHBvcnQgZW51bSBWZWN0b3JTaW1pbGFyaXR5TWV0cmljIHtcbiAgLyoqXG4gICAqIFRoZSBjb3NpbmUgc2ltaWxhcml0eSBiZXR3ZWVuIHR3byB2ZWN0b3JzLCBpZSB0aGUgY29zaW5lIG9mIHRoZSBhbmdsZSBiZXR3ZWVuIHRoZW0uXG4gICAqIEJpZ2dlciBpcyBiZXR0ZXIuIFJhbmdlcyBmcm9tIC0xIHRvIDEuXG4gICAqL1xuICBDT1NJTkVfU0lNSUxBUklUWSA9ICdDT1NJTkVfU0lNSUxBUklUWScsXG5cbiAgLyoqXG4gICAqIFRoZSBpbm5lciBwcm9kdWN0IGJldHdlZW4gdHdvIHZlY3RvcnMsIGllIHRoZSBzdW0gb2YgdGhlIGVsZW1lbnQtd2lzZSBwcm9kdWN0cy5cbiAgICogQmlnZ2VyIGlzIGJldHRlci4gUmFuZ2VzIGZyb20gMCB0byBpbmZpbml0eS5cbiAgICovXG4gIElOTkVSX1BST0RVQ1QgPSAnSU5ORVJfUFJPRFVDVCcsXG5cbiAgLyoqXG4gICAqIFRoZSBFdWNsaWRlYW4gZGlzdGFuY2Ugc3F1YXJlZCBiZXR3ZWVuIHR3byB2ZWN0b3JzLCBpZSB0aGUgc3VtIG9mIHNxdWFyZWQgZGlmZmVyZW5jZXMgYmV0d2VlbiBlYWNoIGVsZW1lbnQuXG4gICAqIFNtYWxsZXIgaXMgYmV0dGVyLiBSYW5nZXMgZnJvbSAwIHRvIGluZmluaXR5LlxuICAgKi9cbiAgRVVDTElERUFOX1NJTUlMQVJJVFkgPSAnRVVDTElERUFOX1NJTUlMQVJJVFknLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElWZWN0b3JJbmRleENvbnRyb2xDbGllbnQge1xuICBjcmVhdGVJbmRleChcbiAgICBpbmRleE5hbWU6IHN0cmluZyxcbiAgICBudW1EaW1lbnNpb25zOiBudW1iZXIsXG4gICAgc2ltaWxhcml0eU1ldHJpYz86IFZlY3RvclNpbWlsYXJpdHlNZXRyaWNcbiAgKTogUHJvbWlzZTxDcmVhdGVWZWN0b3JJbmRleC5SZXNwb25zZT47XG4gIGxpc3RJbmRleGVzKCk6IFByb21pc2U8TGlzdFZlY3RvckluZGV4ZXMuUmVzcG9uc2U+O1xuICBkZWxldGVJbmRleChpbmRleE5hbWU6IHN0cmluZyk6IFByb21pc2U8RGVsZXRlVmVjdG9ySW5kZXguUmVzcG9uc2U+O1xufVxuIl19