/// <reference types="node" />
import { Readable } from "node:stream";
import { ReadableStream } from "stream/web";
export declare class Stream<T> implements AsyncIterable<T> {
    private stream;
    private parse;
    private terminator;
    constructor({ stream, parse, terminator, }: {
        stream: Readable | ReadableStream;
        parse: (val: unknown) => Promise<T>;
        terminator: string;
    });
    private iterMessages;
    [Symbol.asyncIterator](): AsyncIterator<T, void, unknown>;
}
/**
 * Browser polyfill for ReadableStream
 */
export declare function readableStreamAsyncIterable<T>(stream: any): AsyncIterableIterator<T>;
