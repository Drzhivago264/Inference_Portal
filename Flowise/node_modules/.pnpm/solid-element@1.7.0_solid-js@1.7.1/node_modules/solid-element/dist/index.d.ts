import { ComponentType as mComponentType, PropsDefinitionInput } from "component-register";
export { hot, getCurrentElement, noShadowDOM } from "component-register";
export type ComponentType<T> = mComponentType<T>;
declare function withSolid<T extends object>(ComponentType: ComponentType<T>): ComponentType<T>;
declare function customElement<T extends object>(tag: string, ComponentType: ComponentType<T>): (ComponentType: ComponentType<T>) => any;
declare function customElement<T extends object>(tag: string, props: PropsDefinitionInput<T>, ComponentType: ComponentType<T>): (ComponentType: ComponentType<T>) => any;
export { withSolid, customElement };
