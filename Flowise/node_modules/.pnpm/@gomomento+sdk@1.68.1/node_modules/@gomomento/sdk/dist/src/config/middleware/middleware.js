"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MiddlewareMessage = exports.MiddlewareStatus = exports.MiddlewareMetadata = void 0;
class MiddlewareMetadata {
    constructor(metadata) {
        this._grpcMetadata = metadata;
    }
    toJsonString() {
        return JSON.stringify(this._grpcMetadata.toJSON());
    }
}
exports.MiddlewareMetadata = MiddlewareMetadata;
class MiddlewareStatus {
    constructor(status) {
        this._grpcStatus = status;
    }
    code() {
        return this._grpcStatus.code;
    }
}
exports.MiddlewareStatus = MiddlewareStatus;
class MiddlewareMessage {
    constructor(message) {
        this._grpcMessage = message;
    }
    messageLength() {
        if (this._grpcMessage !== null && this._grpcMessage !== undefined) {
            return this._grpcMessage.serializeBinary().length;
        }
        return 0;
    }
}
exports.MiddlewareMessage = MiddlewareMessage;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb25maWcvbWlkZGxld2FyZS9taWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdBLE1BQWEsa0JBQWtCO0lBRTdCLFlBQVksUUFBa0I7UUFDNUIsSUFBSSxDQUFDLGFBQWEsR0FBRyxRQUFRLENBQUM7SUFDaEMsQ0FBQztJQUVELFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQ3JELENBQUM7Q0FDRjtBQVRELGdEQVNDO0FBQ0QsTUFBYSxnQkFBZ0I7SUFFM0IsWUFBWSxNQUFvQjtRQUM5QixJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7SUFDL0IsQ0FBQztDQUNGO0FBVEQsNENBU0M7QUFFRCxNQUFhLGlCQUFpQjtJQUU1QixZQUFZLE9BQWdCO1FBQzFCLElBQUksQ0FBQyxZQUFZLEdBQUcsT0FBTyxDQUFDO0lBQzlCLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBSSxJQUFJLENBQUMsWUFBWSxLQUFLLElBQUksSUFBSSxJQUFJLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtZQUNqRSxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBZSxFQUFFLENBQUMsTUFBTSxDQUFDO1NBQ25EO1FBQ0QsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0NBQ0Y7QUFaRCw4Q0FZQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7TWV0YWRhdGEsIFN0YXR1c09iamVjdH0gZnJvbSAnQGdycGMvZ3JwYy1qcyc7XG5pbXBvcnQge01lc3NhZ2V9IGZyb20gJ2dvb2dsZS1wcm90b2J1Zic7XG5cbmV4cG9ydCBjbGFzcyBNaWRkbGV3YXJlTWV0YWRhdGEge1xuICByZWFkb25seSBfZ3JwY01ldGFkYXRhOiBNZXRhZGF0YTtcbiAgY29uc3RydWN0b3IobWV0YWRhdGE6IE1ldGFkYXRhKSB7XG4gICAgdGhpcy5fZ3JwY01ldGFkYXRhID0gbWV0YWRhdGE7XG4gIH1cblxuICB0b0pzb25TdHJpbmcoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodGhpcy5fZ3JwY01ldGFkYXRhLnRvSlNPTigpKTtcbiAgfVxufVxuZXhwb3J0IGNsYXNzIE1pZGRsZXdhcmVTdGF0dXMge1xuICByZWFkb25seSBfZ3JwY1N0YXR1czogU3RhdHVzT2JqZWN0O1xuICBjb25zdHJ1Y3RvcihzdGF0dXM6IFN0YXR1c09iamVjdCkge1xuICAgIHRoaXMuX2dycGNTdGF0dXMgPSBzdGF0dXM7XG4gIH1cblxuICBjb2RlKCkge1xuICAgIHJldHVybiB0aGlzLl9ncnBjU3RhdHVzLmNvZGU7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE1pZGRsZXdhcmVNZXNzYWdlIHtcbiAgcmVhZG9ubHkgX2dycGNNZXNzYWdlOiBNZXNzYWdlO1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBNZXNzYWdlKSB7XG4gICAgdGhpcy5fZ3JwY01lc3NhZ2UgPSBtZXNzYWdlO1xuICB9XG5cbiAgbWVzc2FnZUxlbmd0aCgpOiBudW1iZXIge1xuICAgIGlmICh0aGlzLl9ncnBjTWVzc2FnZSAhPT0gbnVsbCAmJiB0aGlzLl9ncnBjTWVzc2FnZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZ3JwY01lc3NhZ2Uuc2VyaWFsaXplQmluYXJ5KCkubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlciB7XG4gIG9uUmVxdWVzdE1ldGFkYXRhKG1ldGFkYXRhOiBNaWRkbGV3YXJlTWV0YWRhdGEpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXRhZGF0YT47XG4gIG9uUmVxdWVzdEJvZHkocmVxdWVzdDogTWlkZGxld2FyZU1lc3NhZ2UpOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlPjtcblxuICBvblJlc3BvbnNlTWV0YWRhdGEobWV0YWRhdGE6IE1pZGRsZXdhcmVNZXRhZGF0YSk6IFByb21pc2U8TWlkZGxld2FyZU1ldGFkYXRhPjtcbiAgb25SZXNwb25zZUJvZHkoXG4gICAgcmVzcG9uc2U6IE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbFxuICApOiBQcm9taXNlPE1pZGRsZXdhcmVNZXNzYWdlIHwgbnVsbD47XG4gIG9uUmVzcG9uc2VTdGF0dXMoc3RhdHVzOiBNaWRkbGV3YXJlU3RhdHVzKTogUHJvbWlzZTxNaWRkbGV3YXJlU3RhdHVzPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJDb250ZXh0IHtcbiAgW2tleTogc3ltYm9sXTogc3RyaW5nO1xufVxuXG4vKipcbiAqIFRoZSBNaWRkbGV3YXJlIGludGVyZmFjZSBhbGxvd3MgdGhlIENvbmZpZ3VyYXRpb24gdG8gcHJvdmlkZSBhIGhpZ2hlci1vcmRlciBmdW5jdGlvbiB0aGF0IHdyYXBzIGFsbCByZXF1ZXN0cy5cbiAqIFRoaXMgYWxsb3dzIGZ1dHVyZSBzdXBwb3J0IGZvciB0aGluZ3MgbGlrZSBjbGllbnQtc2lkZSBtZXRyaWNzIG9yIG90aGVyIGRpYWdub3N0aWNzIGhlbHBlcnMuXG4gKlxuICogQW4gb3B0aW9uYWwgY29udGV4dCBjYW4gYmUgcHJvdmlkZWQgdGhhdCBpcyBlc3NlbnRpYWxseSBhIDxrZXksIHZhbHVlPiBtYXAge0BsaW5rIE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlckNvbnRleHR9LlxuICogVGhlIGNvbnRleHQgb2JqZWN0IGlzIGF2YWlsYWJsZSB0byBlYWNoIGluZGl2aWR1YWwgaW52b2NhdGlvbiBvZiB0aGUgcmVxdWVzdCBoYW5kbGVyIGZvciB0aGUgbWlkZGxld2FyZS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBNaWRkbGV3YXJlIHtcbiAgb25OZXdSZXF1ZXN0KFxuICAgIGNvbnRleHQ/OiBNaWRkbGV3YXJlUmVxdWVzdEhhbmRsZXJDb250ZXh0XG4gICk6IE1pZGRsZXdhcmVSZXF1ZXN0SGFuZGxlcjtcbiAgY2xvc2U/KCk6IHZvaWQ7XG59XG4iXX0=