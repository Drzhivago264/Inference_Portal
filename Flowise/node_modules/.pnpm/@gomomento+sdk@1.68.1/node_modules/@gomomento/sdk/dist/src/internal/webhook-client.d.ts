import { CredentialProvider, Webhook, WebhookId, DeleteWebhook, PutWebhook, ListWebhooks, GetWebhookSecret, RotateWebhookSecret } from '@gomomento/sdk-core';
import { IWebhookClient } from '@gomomento/sdk-core/dist/src/internal/clients/pubsub/IWebhookClient';
import { TopicClientPropsWithConfiguration } from './topic-client-props-with-config';
export declare class WebhookClient implements IWebhookClient {
    private readonly webhookClient;
    protected readonly credentialProvider: CredentialProvider;
    private readonly logger;
    private readonly cacheServiceErrorMapper;
    private static readonly DEFAULT_REQUEST_TIMEOUT_MS;
    private readonly unaryInterceptors;
    /**
     * @param {TopicClientProps} props
     */
    constructor(props: TopicClientPropsWithConfiguration);
    deleteWebhook(id: WebhookId): Promise<DeleteWebhook.Response>;
    listWebhooks(cache: string): Promise<ListWebhooks.Response>;
    putWebhook(webhook: Webhook): Promise<PutWebhook.Response>;
    getWebhookSecret(id: WebhookId): Promise<GetWebhookSecret.Response>;
    rotateWebhookSecret(id: WebhookId): Promise<RotateWebhookSecret.Response>;
}
