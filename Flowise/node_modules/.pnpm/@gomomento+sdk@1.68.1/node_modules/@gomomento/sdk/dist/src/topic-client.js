"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TopicClient = void 0;
const AbstractTopicClient_1 = require("@gomomento/sdk-core/dist/src/internal/clients/pubsub/AbstractTopicClient");
const _1 = require(".");
const pubsub_client_1 = require("./internal/pubsub-client");
const webhook_client_1 = require("./internal/webhook-client");
/**
 * Momento Topic Client.
 *
 * Publish and subscribe to topics.
 */
class TopicClient extends AbstractTopicClient_1.AbstractTopicClient {
    /**
     * Creates an instance of TopicClient.
     */
    constructor(props) {
        var _a;
        super();
        const configuration = (_a = props.configuration) !== null && _a !== void 0 ? _a : getDefaultTopicClientConfiguration();
        const propsWithConfiguration = {
            ...props,
            configuration,
        };
        this.logger = configuration.getLoggerFactory().getLogger(this);
        this.logger.debug('Creating Momento TopicClient');
        this.pubsubClient = new pubsub_client_1.PubsubClient(propsWithConfiguration);
        this.webhookClient = new webhook_client_1.WebhookClient(propsWithConfiguration);
    }
}
exports.TopicClient = TopicClient;
function getDefaultTopicClientConfiguration() {
    return _1.TopicConfigurations.Default.latest();
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9waWMtY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3RvcGljLWNsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrSEFBNkc7QUFDN0csd0JBQXlFO0FBQ3pFLDREQUFzRDtBQUl0RCw4REFBd0Q7QUFHeEQ7Ozs7R0FJRztBQUNILE1BQWEsV0FBWSxTQUFRLHlDQUFtQjtJQUtsRDs7T0FFRztJQUNILFlBQVksS0FBdUI7O1FBQ2pDLEtBQUssRUFBRSxDQUFDO1FBRVIsTUFBTSxhQUFhLEdBQ2pCLE1BQUEsS0FBSyxDQUFDLGFBQWEsbUNBQUksa0NBQWtDLEVBQUUsQ0FBQztRQUM5RCxNQUFNLHNCQUFzQixHQUFzQztZQUNoRSxHQUFHLEtBQUs7WUFDUixhQUFhO1NBQ2QsQ0FBQztRQUVGLElBQUksQ0FBQyxNQUFNLEdBQUcsYUFBYSxDQUFDLGdCQUFnQixFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQy9ELElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLDhCQUE4QixDQUFDLENBQUM7UUFFbEQsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLDRCQUFZLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUM3RCxJQUFJLENBQUMsYUFBYSxHQUFHLElBQUksOEJBQWEsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQ2pFLENBQUM7Q0FDRjtBQXhCRCxrQ0F3QkM7QUFFRCxTQUFTLGtDQUFrQztJQUN6QyxPQUFPLHNCQUFtQixDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUM5QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBYnN0cmFjdFRvcGljQ2xpZW50fSBmcm9tICdAZ29tb21lbnRvL3Nkay1jb3JlL2Rpc3Qvc3JjL2ludGVybmFsL2NsaWVudHMvcHVic3ViL0Fic3RyYWN0VG9waWNDbGllbnQnO1xuaW1wb3J0IHtNb21lbnRvTG9nZ2VyLCBUb3BpY0NvbmZpZ3VyYXRpb24sIFRvcGljQ29uZmlndXJhdGlvbnN9IGZyb20gJy4nO1xuaW1wb3J0IHtQdWJzdWJDbGllbnR9IGZyb20gJy4vaW50ZXJuYWwvcHVic3ViLWNsaWVudCc7XG5pbXBvcnQge1RvcGljQ2xpZW50UHJvcHN9IGZyb20gJy4vdG9waWMtY2xpZW50LXByb3BzJztcbmltcG9ydCB7SVB1YnN1YkNsaWVudH0gZnJvbSAnQGdvbW9tZW50by9zZGstY29yZS9kaXN0L3NyYy9pbnRlcm5hbC9jbGllbnRzJztcbmltcG9ydCB7SVdlYmhvb2tDbGllbnR9IGZyb20gJ0Bnb21vbWVudG8vc2RrLWNvcmUvZGlzdC9zcmMvaW50ZXJuYWwvY2xpZW50cy9wdWJzdWIvSVdlYmhvb2tDbGllbnQnO1xuaW1wb3J0IHtXZWJob29rQ2xpZW50fSBmcm9tICcuL2ludGVybmFsL3dlYmhvb2stY2xpZW50JztcbmltcG9ydCB7VG9waWNDbGllbnRQcm9wc1dpdGhDb25maWd1cmF0aW9ufSBmcm9tICcuL2ludGVybmFsL3RvcGljLWNsaWVudC1wcm9wcy13aXRoLWNvbmZpZyc7XG5cbi8qKlxuICogTW9tZW50byBUb3BpYyBDbGllbnQuXG4gKlxuICogUHVibGlzaCBhbmQgc3Vic2NyaWJlIHRvIHRvcGljcy5cbiAqL1xuZXhwb3J0IGNsYXNzIFRvcGljQ2xpZW50IGV4dGVuZHMgQWJzdHJhY3RUb3BpY0NsaWVudCB7XG4gIHByb3RlY3RlZCByZWFkb25seSBsb2dnZXI6IE1vbWVudG9Mb2dnZXI7XG4gIHByb3RlY3RlZCByZWFkb25seSBwdWJzdWJDbGllbnQ6IElQdWJzdWJDbGllbnQ7XG4gIHByb3RlY3RlZCByZWFkb25seSB3ZWJob29rQ2xpZW50OiBJV2ViaG9va0NsaWVudDtcblxuICAvKipcbiAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBUb3BpY0NsaWVudC5cbiAgICovXG4gIGNvbnN0cnVjdG9yKHByb3BzOiBUb3BpY0NsaWVudFByb3BzKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnN0IGNvbmZpZ3VyYXRpb246IFRvcGljQ29uZmlndXJhdGlvbiA9XG4gICAgICBwcm9wcy5jb25maWd1cmF0aW9uID8/IGdldERlZmF1bHRUb3BpY0NsaWVudENvbmZpZ3VyYXRpb24oKTtcbiAgICBjb25zdCBwcm9wc1dpdGhDb25maWd1cmF0aW9uOiBUb3BpY0NsaWVudFByb3BzV2l0aENvbmZpZ3VyYXRpb24gPSB7XG4gICAgICAuLi5wcm9wcyxcbiAgICAgIGNvbmZpZ3VyYXRpb24sXG4gICAgfTtcblxuICAgIHRoaXMubG9nZ2VyID0gY29uZmlndXJhdGlvbi5nZXRMb2dnZXJGYWN0b3J5KCkuZ2V0TG9nZ2VyKHRoaXMpO1xuICAgIHRoaXMubG9nZ2VyLmRlYnVnKCdDcmVhdGluZyBNb21lbnRvIFRvcGljQ2xpZW50Jyk7XG5cbiAgICB0aGlzLnB1YnN1YkNsaWVudCA9IG5ldyBQdWJzdWJDbGllbnQocHJvcHNXaXRoQ29uZmlndXJhdGlvbik7XG4gICAgdGhpcy53ZWJob29rQ2xpZW50ID0gbmV3IFdlYmhvb2tDbGllbnQocHJvcHNXaXRoQ29uZmlndXJhdGlvbik7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdFRvcGljQ2xpZW50Q29uZmlndXJhdGlvbigpOiBUb3BpY0NvbmZpZ3VyYXRpb24ge1xuICByZXR1cm4gVG9waWNDb25maWd1cmF0aW9ucy5EZWZhdWx0LmxhdGVzdCgpO1xufVxuIl19