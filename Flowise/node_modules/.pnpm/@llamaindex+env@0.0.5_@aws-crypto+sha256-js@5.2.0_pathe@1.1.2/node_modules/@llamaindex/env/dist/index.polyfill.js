import { Sha256 } from "@aws-crypto/sha256-js";
import pathe from "pathe";
import { InMemoryFileSystem } from "./type.js";
export { pathe as path };
export const EOL = "\n";
export const defaultFS = new InMemoryFileSystem();
export function ok(value, message) {
    if (!value) {
        const error = Error(message);
        error.name = "AssertionError";
        error.message = message ?? "The expression evaluated to a falsy value.";
        throw error;
    }
}
export function createSHA256() {
    const sha256 = new Sha256();
    return {
        update (data) {
            sha256.update(data);
        },
        digest () {
            return globalThis.btoa(sha256.digestSync().toString());
        }
    };
}
export function randomUUID() {
    return crypto.randomUUID();
}
export * from "./type.js";
export { getEnv } from "./utils.js";
