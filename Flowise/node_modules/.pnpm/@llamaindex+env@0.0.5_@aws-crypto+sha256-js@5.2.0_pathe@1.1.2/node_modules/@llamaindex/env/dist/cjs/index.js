"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    EOL: function() {
        return _nodeos.EOL;
    },
    createSHA256: function() {
        return createSHA256;
    },
    defaultFS: function() {
        return defaultFS;
    },
    getEnv: function() {
        return _utils.getEnv;
    },
    ok: function() {
        return _nodeassert.ok;
    },
    path: function() {
        return _nodepath.default;
    },
    randomUUID: function() {
        return _nodecrypto.randomUUID;
    }
});
const _nodeassert = require("node:assert");
const _nodecrypto = require("node:crypto");
const _promises = /*#__PURE__*/ _interop_require_default(require("node:fs/promises"));
const _nodeos = require("node:os");
const _nodepath = /*#__PURE__*/ _interop_require_default(require("node:path"));
const _utils = require("./utils.js");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function createSHA256() {
    const hash = (0, _nodecrypto.createHash)("sha256");
    return {
        update (data) {
            hash.update(data);
        },
        digest () {
            return hash.digest("base64");
        }
    };
}
const defaultFS = {
    writeFile: function(path, content) {
        return _promises.default.writeFile(path, content, "utf-8");
    },
    readRawFile (path) {
        return _promises.default.readFile(path);
    },
    readFile: function(path) {
        return _promises.default.readFile(path, "utf-8");
    },
    access: _promises.default.access,
    mkdir: _promises.default.mkdir,
    readdir: _promises.default.readdir,
    stat: _promises.default.stat
};
