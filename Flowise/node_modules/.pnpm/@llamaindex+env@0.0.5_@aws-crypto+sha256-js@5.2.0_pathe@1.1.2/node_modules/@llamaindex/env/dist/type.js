import _ from "lodash";
/**
 * A filesystem implementation that stores files in memory.
 */ export class InMemoryFileSystem {
    files = {};
    async writeFile(path, content, options) {
        this.files[path] = _.cloneDeep(content);
    }
    async readFile(path) {
        if (!(path in this.files)) {
            throw new Error(`File ${path} does not exist`);
        }
        return _.cloneDeep(this.files[path]);
    }
    async access(path) {
        if (!(path in this.files)) {
            throw new Error(`File ${path} does not exist`);
        }
    }
    async mkdir(path) {
        this.files[path] = _.get(this.files, path, null);
    }
    async readdir(path) {
        throw new Error("Not implemented");
    }
    async stat(path) {
        throw new Error("Not implemented");
    }
    async readRawFile(path) {
        throw new Error("Not implemented");
    }
}
