"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    EOL: function() {
        return EOL;
    },
    createSHA256: function() {
        return createSHA256;
    },
    defaultFS: function() {
        return defaultFS;
    },
    getEnv: function() {
        return _utils.getEnv;
    },
    ok: function() {
        return ok;
    },
    path: function() {
        return _pathe.default;
    },
    randomUUID: function() {
        return randomUUID;
    }
});
const _sha256js = require("@aws-crypto/sha256-js");
const _pathe = /*#__PURE__*/ _interop_require_default(require("pathe"));
const _type = _export_star(require("./type.js"), exports);
const _utils = require("./utils.js");
function _export_star(from, to) {
    Object.keys(from).forEach(function(k) {
        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
            Object.defineProperty(to, k, {
                enumerable: true,
                get: function() {
                    return from[k];
                }
            });
        }
    });
    return from;
}
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
const EOL = "\n";
const defaultFS = new _type.InMemoryFileSystem();
function ok(value, message) {
    if (!value) {
        const error = Error(message);
        error.name = "AssertionError";
        error.message = message ?? "The expression evaluated to a falsy value.";
        throw error;
    }
}
function createSHA256() {
    const sha256 = new _sha256js.Sha256();
    return {
        update (data) {
            sha256.update(data);
        },
        digest () {
            return globalThis.btoa(sha256.digestSync().toString());
        }
    };
}
function randomUUID() {
    return crypto.randomUUID();
}
