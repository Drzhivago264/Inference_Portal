{"version":3,"file":"index.cjs.js","sources":["../src/callback.ts"],"sourcesContent":["import { Langfuse, type LangfuseOptions } from \"langfuse\";\n\nimport { BaseCallbackHandler } from \"@langchain/core/callbacks/base\";\nimport {\n  BaseMessage,\n  HumanMessage,\n  ChatMessage,\n  AIMessage,\n  SystemMessage,\n  FunctionMessage,\n  ToolMessage,\n  type BaseMessageFields,\n  type MessageContent,\n} from \"@langchain/core/messages\";\n\nimport type { Serialized } from \"@langchain/core/load/serializable\";\nimport type { AgentAction, AgentFinish } from \"@langchain/core/agents\";\nimport type { ChainValues } from \"@langchain/core/utils/types\";\nimport type { LLMResult } from \"@langchain/core/outputs\";\nimport type { Document } from \"@langchain/core/documents\";\n\nimport type { LangfuseTraceClient, LangfuseSpanClient } from \"langfuse-core\";\n\nexport type LlmMessage = {\n  role: string;\n  content: BaseMessageFields[\"content\"];\n  additional_kwargs?: BaseMessageFields[\"additional_kwargs\"];\n};\n\nexport type AnonymousLlmMessage = {\n  content: BaseMessageFields[\"content\"];\n  additional_kwargs?: BaseMessageFields[\"additional_kwargs\"];\n};\n\ntype RootParams = {\n  root: LangfuseTraceClient | LangfuseSpanClient;\n};\n\ntype KeyParams = {\n  publicKey?: string;\n  secretKey?: string;\n} & LangfuseOptions;\n\ntype ConstructorParams = (RootParams | KeyParams) & {\n  userId?: string; // added to all traces\n  version?: string; // added to all traces and observations\n  sessionId?: string; // added to all traces\n  metadata?: Record<string, unknown>; // added to all traces\n  tags?: string[]; // added to all traces\n};\n\nexport class CallbackHandler extends BaseCallbackHandler {\n  name = \"CallbackHandler\";\n  langfuse: Langfuse;\n  traceId?: string;\n  observationId?: string;\n  rootObservationId?: string;\n  topLevelObservationId?: string;\n  userId?: string;\n  version?: string;\n  sessionId?: string;\n  metadata?: Record<string, unknown>;\n  tags?: string[];\n  rootProvided: boolean = false;\n  debugEnabled: boolean = false;\n\n  constructor(params?: ConstructorParams) {\n    super();\n    if (params && \"root\" in params) {\n      this.langfuse = params.root.client as Langfuse;\n      this.rootObservationId = params.root.observationId ?? undefined;\n      this.traceId = params.root.traceId;\n      this.rootProvided = true;\n    } else {\n      this.langfuse = new Langfuse({\n        ...params,\n        persistence: \"memory\",\n        sdkIntegration: params?.sdkIntegration ?? \"LANGCHAIN\",\n      });\n      this.sessionId = params?.sessionId;\n      this.userId = params?.userId;\n      this.metadata = params?.metadata;\n      this.tags = params?.tags;\n    }\n    this.version = params?.version;\n  }\n\n  async flushAsync(): Promise<any> {\n    return this.langfuse.flushAsync();\n  }\n\n  async shutdownAsync(): Promise<any> {\n    return this.langfuse.shutdownAsync();\n  }\n\n  debug(enabled: boolean = true): void {\n    this.langfuse.debug(enabled);\n    this.debugEnabled = enabled;\n  }\n\n  _log(message: any): void {\n    if (this.debugEnabled) {\n      console.log(message);\n    }\n  }\n\n  async handleNewToken(token: string, runId: string): Promise<void> {\n    this._log(`New token: ${token} with ID: ${runId}`);\n  }\n\n  /**\n   * @deprecated This method will be removed in a future version as it is not concurrency-safe.\n   * Please use interop with the Langfuse SDK to get the trace ID ([docs](https://langfuse.com/docs/integrations/langchain/get-started#interoperability)).\n   */\n  getTraceId(): string | undefined {\n    return this.traceId;\n  }\n\n  /**\n   * @deprecated This method will be removed in a future version as it is not concurrency-safe.\n   * For more information on how to get trace URLs, see {@link https://langfuse.com/docs/tracing/url}.\n   */\n  getTraceUrl(): string | undefined {\n    return this.traceId ? `${this.langfuse.baseUrl}/trace/${this.traceId}` : undefined;\n  }\n\n  getLangchainRunId(): string | undefined {\n    return this.topLevelObservationId;\n  }\n\n  async handleRetrieverError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`Retriever error: ${err} with ID: ${runId}`);\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, err.toString());\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleChainStart(\n    chain: Serialized,\n    inputs: ChainValues,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    runType?: string,\n    name?: string\n  ): Promise<void> {\n    try {\n      this._log(`Chain start with Id: ${runId}`);\n\n      this.generateTrace(chain, runId, parentRunId, tags, metadata, inputs);\n      this.langfuse.span({\n        id: runId,\n        traceId: this.traceId,\n        parentObservationId: parentRunId ?? this.rootObservationId,\n        name: name ?? chain.id.at(-1)?.toString(),\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        input: inputs,\n        version: this.version,\n      });\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleAgentAction(action: AgentAction, runId?: string, parentRunId?: string): Promise<void> {\n    try {\n      this._log(`Agent action with ID: ${runId}`);\n\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        endTime: new Date(),\n        input: action,\n        version: this.version,\n      });\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleAgentEnd?(action: AgentFinish, runId: string, parentRunId?: string): Promise<void> {\n    try {\n      this._log(`Agent finish with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        endTime: new Date(),\n        output: action,\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, action);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleChainError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`Chain error: ${err} with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, err.toString());\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  generateTrace(\n    serialized: Serialized,\n    runId: string,\n    parentRunId: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    input?: string | BaseMessage[][] | ChainValues\n  ): void {\n    if (this.traceId && !parentRunId && !this.rootProvided) {\n      this.traceId = undefined;\n      this.topLevelObservationId = undefined;\n    }\n\n    if (!this.traceId) {\n      this.langfuse.trace({\n        id: runId,\n        name: serialized.id.at(-1)?.toString(),\n        metadata: this.joinTagsAndMetaData(tags, metadata, this.metadata),\n        userId: this.userId,\n        version: this.version,\n        sessionId: this.sessionId,\n        input: input,\n        tags: this.tags,\n      });\n      this.traceId = runId;\n    }\n    this.topLevelObservationId = parentRunId ? this.topLevelObservationId : runId;\n  }\n\n  async handleGenerationStart(\n    llm: Serialized,\n    messages: (LlmMessage | MessageContent | AnonymousLlmMessage)[],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    name?: string\n  ): Promise<void> {\n    this._log(`Generation start with ID: ${runId}`);\n\n    this.generateTrace(llm, runId, parentRunId, tags, metadata, messages);\n\n    const modelParameters: Record<string, any> = {};\n    const invocationParams = extraParams?.[\"invocation_params\"];\n\n    for (const [key, value] of Object.entries({\n      temperature: (invocationParams as any)?.temperature,\n      max_tokens: (invocationParams as any)?.max_tokens,\n      top_p: (invocationParams as any)?.top_p,\n      frequency_penalty: (invocationParams as any)?.frequency_penalty,\n      presence_penalty: (invocationParams as any)?.presence_penalty,\n      request_timeout: (invocationParams as any)?.request_timeout,\n    })) {\n      if (value !== undefined && value !== null) {\n        modelParameters[key] = value;\n      }\n    }\n\n    interface InvocationParams {\n      _type?: string;\n      model?: string;\n      model_name?: string;\n      repo_id?: string;\n    }\n\n    let extractedModelName: string | undefined;\n    if (extraParams) {\n      const params = extraParams.invocation_params as InvocationParams;\n      extractedModelName = params.model;\n    }\n\n    this.langfuse.generation({\n      id: runId,\n      traceId: this.traceId,\n      name: name ?? llm.id.at(-1)?.toString(),\n      metadata: this.joinTagsAndMetaData(tags, metadata),\n      parentObservationId: parentRunId ?? this.rootObservationId,\n      input: messages,\n      model: extractedModelName,\n      modelParameters: modelParameters,\n      version: this.version,\n    });\n  }\n\n  async handleChatModelStart(\n    llm: Serialized,\n    messages: BaseMessage[][],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    name?: string\n  ): Promise<void> {\n    try {\n      this._log(`Chat model start with ID: ${runId}`);\n\n      const prompts = messages.flatMap((message) => message.map((m) => this.extractChatMessageContent(m)));\n\n      this.handleGenerationStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleChainEnd(outputs: ChainValues, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`Chain end with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        output: outputs,\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, outputs);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleLLMStart(\n    llm: Serialized,\n    prompts: string[],\n    runId: string,\n    parentRunId?: string | undefined,\n    extraParams?: Record<string, unknown> | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    name?: string\n  ): Promise<void> {\n    try {\n      this._log(`LLM start with ID: ${runId}`);\n\n      this.handleGenerationStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata, name);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleToolStart(\n    tool: Serialized,\n    input: string,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    name?: string\n  ): Promise<void> {\n    try {\n      this._log(`Tool start with ID: ${runId}`);\n\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        name: name ?? tool.id.at(-1)?.toString(),\n        input: input,\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        version: this.version,\n      });\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleRetrieverStart(\n    retriever: Serialized,\n    query: string,\n    runId: string,\n    parentRunId?: string | undefined,\n    tags?: string[] | undefined,\n    metadata?: Record<string, unknown> | undefined,\n    name?: string\n  ): Promise<void> {\n    try {\n      this._log(`Retriever start with ID: ${runId}`);\n\n      this.langfuse.span({\n        id: runId,\n        parentObservationId: parentRunId,\n        traceId: this.traceId,\n        name: name ?? retriever.id.at(-1)?.toString(),\n        input: query,\n        metadata: this.joinTagsAndMetaData(tags, metadata),\n        version: this.version,\n      });\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleRetrieverEnd(\n    documents: Document<Record<string, any>>[],\n    runId: string,\n    parentRunId?: string | undefined\n  ): Promise<void> {\n    try {\n      this._log(`Retriever end with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        output: documents,\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, documents);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleToolEnd(output: string, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`Tool end with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        output: output,\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, output);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleToolError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`Tool error ${err} with ID: ${runId}`);\n\n      this.langfuse._updateSpan({\n        id: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, err.toString());\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  async handleLLMEnd(output: LLMResult, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`LLM end with ID: ${runId}`);\n\n      const lastResponse =\n        output.generations[output.generations.length - 1][output.generations[output.generations.length - 1].length - 1];\n\n      const llmUsage = output.llmOutput?.[\"tokenUsage\"];\n\n      const extractedOutput =\n        \"message\" in lastResponse && lastResponse[\"message\"] instanceof BaseMessage\n          ? this.extractChatMessageContent(lastResponse[\"message\"])\n          : lastResponse.text;\n\n      this.langfuse._updateGeneration({\n        id: runId,\n        traceId: this.traceId,\n        output: extractedOutput,\n        endTime: new Date(),\n        usage: llmUsage,\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, extractedOutput);\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  private extractChatMessageContent(message: BaseMessage): LlmMessage | AnonymousLlmMessage | MessageContent {\n    let response = undefined;\n\n    if (message instanceof HumanMessage) {\n      response = { content: message.content, role: \"user\" };\n    } else if (message instanceof ChatMessage) {\n      response = { content: message.content, role: message.name };\n    } else if (message instanceof AIMessage) {\n      response = { content: message.content, role: \"assistant\" };\n    } else if (message instanceof SystemMessage) {\n      response = { content: message.content };\n    } else if (message instanceof FunctionMessage) {\n      response = { content: message.content, additional_kwargs: message.additional_kwargs, role: message.name };\n    } else if (message instanceof ToolMessage) {\n      response = { content: message.content, additional_kwargs: message.additional_kwargs, role: message.name };\n    } else if (!message.name) {\n      response = { content: message.content };\n    } else {\n      response = {\n        role: message.name,\n        content: message.content,\n      };\n    }\n    if (message.additional_kwargs.function_call || message.additional_kwargs.tool_calls) {\n      return { ...response, additional_kwargs: message.additional_kwargs };\n    }\n    return response;\n  }\n\n  async handleLLMError(err: any, runId: string, parentRunId?: string | undefined): Promise<void> {\n    try {\n      this._log(`LLM error ${err} with ID: ${runId}`);\n\n      this.langfuse._updateGeneration({\n        id: runId,\n        traceId: this.traceId,\n        level: \"ERROR\",\n        statusMessage: err.toString(),\n        endTime: new Date(),\n        version: this.version,\n      });\n      this.updateTrace(runId, parentRunId, err.toString());\n    } catch (e) {\n      this._log(e);\n    }\n  }\n\n  updateTrace(runId: string, parentRunId: string | undefined, output: any): void {\n    if (!parentRunId && this.traceId && this.traceId === runId) {\n      this.langfuse.trace({ id: this.traceId, output: output });\n    }\n  }\n\n  joinTagsAndMetaData(\n    tags?: string[] | undefined,\n    metadata1?: Record<string, unknown> | undefined,\n    metadata2?: Record<string, unknown> | undefined\n  ): Record<string, unknown> {\n    const finalDict: Record<string, unknown> = {};\n    if (tags) {\n      finalDict.tags = tags;\n    }\n    if (metadata1) {\n      Object.assign(finalDict, metadata1);\n    }\n    if (metadata2) {\n      Object.assign(finalDict, metadata2);\n    }\n    return finalDict;\n  }\n}\n"],"names":["CallbackHandler","BaseCallbackHandler","constructor","params","name","rootProvided","debugEnabled","langfuse","root","client","rootObservationId","observationId","undefined","traceId","Langfuse","persistence","sdkIntegration","sessionId","userId","metadata","tags","version","flushAsync","shutdownAsync","debug","enabled","_log","message","console","log","handleNewToken","token","runId","getTraceId","getTraceUrl","baseUrl","getLangchainRunId","topLevelObservationId","handleRetrieverError","err","parentRunId","_updateSpan","id","level","statusMessage","toString","endTime","Date","updateTrace","e","handleChainStart","chain","inputs","runType","generateTrace","span","parentObservationId","at","joinTagsAndMetaData","input","handleAgentAction","action","handleAgentEnd","output","handleChainError","serialized","trace","handleGenerationStart","llm","messages","extraParams","modelParameters","invocationParams","key","value","Object","entries","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","request_timeout","extractedModelName","invocation_params","model","generation","handleChatModelStart","prompts","flatMap","map","m","extractChatMessageContent","handleChainEnd","outputs","handleLLMStart","handleToolStart","tool","handleRetrieverStart","retriever","query","handleRetrieverEnd","documents","handleToolEnd","handleToolError","handleLLMEnd","lastResponse","generations","length","llmUsage","llmOutput","extractedOutput","BaseMessage","text","_updateGeneration","usage","response","HumanMessage","content","role","ChatMessage","AIMessage","SystemMessage","FunctionMessage","additional_kwargs","ToolMessage","function_call","tool_calls","handleLLMError","metadata1","metadata2","finalDict","assign"],"mappings":"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"}