import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  BlobPayloadInputTypes,
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  BedrockRuntimeClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../BedrockRuntimeClient";
import {
  InvokeModelWithResponseStreamRequest,
  InvokeModelWithResponseStreamResponse,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export type InvokeModelWithResponseStreamCommandInputType = Pick<
  InvokeModelWithResponseStreamRequest,
  Exclude<keyof InvokeModelWithResponseStreamRequest, "body">
> & {
  body: BlobPayloadInputTypes;
};
export interface InvokeModelWithResponseStreamCommandInput
  extends InvokeModelWithResponseStreamCommandInputType {}
export interface InvokeModelWithResponseStreamCommandOutput
  extends InvokeModelWithResponseStreamResponse,
    __MetadataBearer {}
export declare class InvokeModelWithResponseStreamCommand extends $Command<
  InvokeModelWithResponseStreamCommandInput,
  InvokeModelWithResponseStreamCommandOutput,
  BedrockRuntimeClientResolvedConfig
> {
  readonly input: InvokeModelWithResponseStreamCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: InvokeModelWithResponseStreamCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: BedrockRuntimeClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    InvokeModelWithResponseStreamCommandInput,
    InvokeModelWithResponseStreamCommandOutput
  >;
  private serialize;
  private deserialize;
}
