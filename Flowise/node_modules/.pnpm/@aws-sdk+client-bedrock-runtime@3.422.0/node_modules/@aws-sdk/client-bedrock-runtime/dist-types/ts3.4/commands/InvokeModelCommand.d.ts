import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  BlobPayloadInputTypes,
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import { Uint8ArrayBlobAdapter } from "@smithy/util-stream";
import {
  BedrockRuntimeClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../BedrockRuntimeClient";
import { InvokeModelRequest, InvokeModelResponse } from "../models/models_0";
export { __MetadataBearer, $Command };
export type InvokeModelCommandInputType = Pick<
  InvokeModelRequest,
  Exclude<keyof InvokeModelRequest, "body">
> & {
  body: BlobPayloadInputTypes;
};
export interface InvokeModelCommandInput extends InvokeModelCommandInputType {}
export type InvokeModelCommandOutputType = Pick<
  InvokeModelResponse,
  Exclude<keyof InvokeModelResponse, "body">
> & {
  body: Uint8ArrayBlobAdapter;
};
export interface InvokeModelCommandOutput
  extends InvokeModelCommandOutputType,
    __MetadataBearer {}
export declare class InvokeModelCommand extends $Command<
  InvokeModelCommandInput,
  InvokeModelCommandOutput,
  BedrockRuntimeClientResolvedConfig
> {
  readonly input: InvokeModelCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: InvokeModelCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: BedrockRuntimeClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<InvokeModelCommandInput, InvokeModelCommandOutput>;
  private serialize;
  private deserialize;
}
