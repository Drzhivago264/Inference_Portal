import { Client } from '../api-client.js';
export declare function createSnapshotsApi(client: Client): {
    /**
     * Create new snapshot of the whole storage
     */
    readonly createFullSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        } | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Create new snapshot for a collection
     */
    readonly createSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        } | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Delete snapshot of the whole storage
     */
    readonly deleteFullSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Delete snapshot for a collection
     */
    readonly deleteSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Download specified snapshot of the whole storage as a file
     * @todo Fetcher needs to handle Blob for file downloads
     */
    readonly getFullSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/octet-stream": string;
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Download specified snapshot from a collection as a file
     * @todo Fetcher needs to handle Blob for file downloads
     */
    readonly getSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/octet-stream": string;
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Get list of snapshots of the whole storage
     */
    readonly listFullSnapshots: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        }[] | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Get list of snapshots for a collection
     */
    readonly listSnapshots: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        }[] | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Recover local collection data from an uploaded snapshot. This will overwrite any data, stored on this node, for the collection. If collection does not exist - it will be created.
     */
    readonly recoverFromUploadedSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
                priority?: "snapshot" | "no_sync" | "replica" | undefined;
                checksum?: string | undefined;
            } | undefined;
            path: {
                collection_name: string;
            };
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    snapshot?: string | undefined;
                };
            };
        } | undefined;
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Recover local collection data from a snapshot. This will overwrite any data, stored on this node, for the collection. If collection does not exist - it will be created
     */
    readonly recoverFromSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    location: string;
                    priority?: Record<string, unknown> | "snapshot" | "no_sync" | "replica" | null | undefined;
                    checksum?: string | null | undefined;
                };
            };
        } | undefined;
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Recover shard of a local collection from an uploaded snapshot. This will overwrite any data, stored on this node, for the collection shard
     */
    readonly recoverShardFromUploadedSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
                priority?: "snapshot" | "no_sync" | "replica" | undefined;
                checksum?: string | undefined;
            } | undefined;
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        requestBody?: {
            content: {
                "multipart/form-data": {
                    snapshot?: string | undefined;
                };
            };
        } | undefined;
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Recover shard of a local collection data from a snapshot. This will overwrite any data, stored in this shard, for the collection
     */
    readonly recoverShardFromSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    location: string;
                    priority?: Record<string, unknown> | "snapshot" | "no_sync" | "replica" | null | undefined;
                    checksum?: string | null | undefined;
                };
            };
        } | undefined;
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Get list of snapshots for a shard of a collection
     */
    readonly listShardSnapshots: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        }[] | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Create new snapshot of a shard for a collection
     */
    readonly createShardSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
                shard_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: {
                            name: string;
                            creation_time?: string | null | undefined;
                            size: number;
                            checksum?: string | null | undefined;
                        } | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Download specified snapshot of a shard from a collection as a file
     */
    readonly getShardSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
                shard_id: number;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/octet-stream": string;
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Delete snapshot of a shard for a collection
     */
    readonly deleteShardSnapshot: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query?: {
                wait?: boolean | undefined;
            } | undefined;
            path: {
                collection_name: string;
                shard_id: number;
                snapshot_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            202: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: string | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
};
