import DocumentManager from "./document_manager";
import MemoryManager from "./memory_manager";
import MessageManager from "./message_manager";
import UserManager from "./user_manager";
import { IZepClient } from "./interfaces";
/**
 * ZepClient is a Typescript class for interacting with the Zep.
 */
export default class ZepClient implements IZepClient {
    private static constructing;
    baseURL: string;
    headers: any;
    memory: MemoryManager;
    message: MessageManager;
    document: DocumentManager;
    user: UserManager;
    projectApiKey?: string;
    cloud: boolean;
    /**
     * Constructs a new ZepClient instance.
     * @param {string} [projectApiKey] - The project API key to use for authentication.
     * @param {string} baseURL - Optional. The base URL of the Zep API.
     */
    constructor(projectApiKey?: string, baseURL?: string);
    /**
     * Asynchronously initializes a new instance of the ZepClient class.
     *
     * @param {string} [projectApiKey] Optional. The project API key to use for authentication.
     * @param {string} [baseUrl] Optional. The base URL of the Zep API. Only user for open source
     * @returns {Promise<ZepClient>} A promise that resolves to a new ZepClient instance.
     * @throws {Error} Throws an error if the server is not running.
     */
    static init(projectApiKey?: string, baseUrl?: string): Promise<ZepClient>;
    /**
     * Constructs the full URL for an API endpoint.
     * @param {string} endpoint - The endpoint of the API.
     * @returns {string} The full URL.
     */
    getFullUrl(endpoint: string): string;
    private checkServer;
}
