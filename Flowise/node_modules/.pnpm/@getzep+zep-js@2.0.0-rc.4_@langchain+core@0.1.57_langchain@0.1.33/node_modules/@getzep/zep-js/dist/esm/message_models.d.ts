import { MessageType } from "@langchain/core/messages";
export type RoleType = "user" | "assistant" | "system" | "function" | "tool";
/**
 * IMessage interface for providing input to create a Message instance.
 */
export interface IMessage {
    uuid?: string;
    created_at?: string;
    role: string;
    role_type: RoleType;
    content: string;
    token_count?: number;
    metadata?: Record<string, any>;
}
/**
 * Represents a message in the memory.
 */
export declare class Message {
    uuid?: string;
    created_at?: string;
    role: string;
    role_type: RoleType;
    content: string;
    token_count?: number;
    metadata?: Record<string, any>;
    /**
     * Constructs a new Message instance.
     * @param {IMessage} data - The data to create a message instance.
     */
    constructor(data: IMessage);
    /**
     * Converts the Message instance to a dictionary.
     * @returns {IMessage} A dictionary representation of Message instance.
     */
    toDict(): IMessage;
}
export declare const getZepMessageRoleType: (role: MessageType) => RoleType;
