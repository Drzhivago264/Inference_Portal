/// <reference types="node" />
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: cacheping.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace cache_client {
    export class _PingRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _PingRequest;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _PingRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _PingRequest;
    }
    export class _PingResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _PingResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _PingResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _PingResponse;
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    export abstract class UnimplementedPingService {
        static definition: {
            Ping: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _PingRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _PingRequest;
                responseSerialize: (message: _PingResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _PingResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Ping(call: grpc_1.ServerUnaryCall<_PingRequest, _PingResponse>, callback: grpc_1.sendUnaryData<_PingResponse>): void;
    }
    const PingClient_base: grpc_1.ServiceClientConstructor;
    export class PingClient extends PingClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        Ping: GrpcUnaryServiceInterface<_PingRequest, _PingResponse>;
    }
    export {};
}
