/// <reference types="node" />
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.19.1
 * source: cacheclient.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
import * as grpc_1 from "@grpc/grpc-js";
export declare namespace cache_client {
    export enum ECacheResult {
        Invalid = 0,
        Ok = 1,
        Hit = 2,
        Miss = 3
    }
    export class _GetRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        static fromObject(data: {
            cache_key?: Uint8Array;
        }): _GetRequest;
        toObject(): {
            cache_key?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _GetRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _GetRequest;
    }
    export class _GetResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            result?: ECacheResult;
            cache_body?: Uint8Array;
            message?: string;
        });
        get result(): ECacheResult;
        set result(value: ECacheResult);
        get cache_body(): Uint8Array;
        set cache_body(value: Uint8Array);
        get message(): string;
        set message(value: string);
        static fromObject(data: {
            result?: ECacheResult;
            cache_body?: Uint8Array;
            message?: string;
        }): _GetResponse;
        toObject(): {
            result?: ECacheResult;
            cache_body?: Uint8Array;
            message?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _GetResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _GetResponse;
    }
    export class _GetBatchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            items?: _GetRequest[];
        });
        get items(): _GetRequest[];
        set items(value: _GetRequest[]);
        static fromObject(data: {
            items?: ReturnType<typeof _GetRequest.prototype.toObject>[];
        }): _GetBatchRequest;
        toObject(): {
            items?: ReturnType<typeof _GetRequest.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _GetBatchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _GetBatchRequest;
    }
    export class _DeleteRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        static fromObject(data: {
            cache_key?: Uint8Array;
        }): _DeleteRequest;
        toObject(): {
            cache_key?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DeleteRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DeleteRequest;
    }
    export class _DeleteResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _DeleteResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DeleteResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DeleteResponse;
    }
    export class _SetRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        get cache_body(): Uint8Array;
        set cache_body(value: Uint8Array);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        static fromObject(data: {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        }): _SetRequest;
        toObject(): {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetRequest;
    }
    export class _SetResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            result?: ECacheResult;
            message?: string;
        });
        get result(): ECacheResult;
        set result(value: ECacheResult);
        get message(): string;
        set message(value: string);
        static fromObject(data: {
            result?: ECacheResult;
            message?: string;
        }): _SetResponse;
        toObject(): {
            result?: ECacheResult;
            message?: string;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetResponse;
    }
    export class _SetBatchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            items?: _SetRequest[];
        });
        get items(): _SetRequest[];
        set items(value: _SetRequest[]);
        static fromObject(data: {
            items?: ReturnType<typeof _SetRequest.prototype.toObject>[];
        }): _SetBatchRequest;
        toObject(): {
            items?: ReturnType<typeof _SetRequest.prototype.toObject>[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetBatchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetBatchRequest;
    }
    export class _SetIfNotExistsRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        get cache_body(): Uint8Array;
        set cache_body(value: Uint8Array);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        static fromObject(data: {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        }): _SetIfNotExistsRequest;
        toObject(): {
            cache_key?: Uint8Array;
            cache_body?: Uint8Array;
            ttl_milliseconds?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetIfNotExistsRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetIfNotExistsRequest;
    }
    export class _SetIfNotExistsResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            stored?: _SetIfNotExistsResponse._Stored;
            not_stored?: never;
        } | {
            stored?: never;
            not_stored?: _SetIfNotExistsResponse._NotStored;
        }))));
        get stored(): _SetIfNotExistsResponse._Stored;
        set stored(value: _SetIfNotExistsResponse._Stored);
        get has_stored(): boolean;
        get not_stored(): _SetIfNotExistsResponse._NotStored;
        set not_stored(value: _SetIfNotExistsResponse._NotStored);
        get has_not_stored(): boolean;
        get result(): "none" | "stored" | "not_stored";
        static fromObject(data: {
            stored?: ReturnType<typeof _SetIfNotExistsResponse._Stored.prototype.toObject>;
            not_stored?: ReturnType<typeof _SetIfNotExistsResponse._NotStored.prototype.toObject>;
        }): _SetIfNotExistsResponse;
        toObject(): {
            stored?: ReturnType<typeof _SetIfNotExistsResponse._Stored.prototype.toObject>;
            not_stored?: ReturnType<typeof _SetIfNotExistsResponse._NotStored.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetIfNotExistsResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetIfNotExistsResponse;
    }
    export namespace _SetIfNotExistsResponse {
        class _Stored extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Stored;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Stored;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Stored;
        }
        class _NotStored extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _NotStored;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _NotStored;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _NotStored;
        }
    }
    export class _KeysExistRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_keys?: Uint8Array[];
        });
        get cache_keys(): Uint8Array[];
        set cache_keys(value: Uint8Array[]);
        static fromObject(data: {
            cache_keys?: Uint8Array[];
        }): _KeysExistRequest;
        toObject(): {
            cache_keys?: Uint8Array[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _KeysExistRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _KeysExistRequest;
    }
    export class _KeysExistResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            exists?: boolean[];
        });
        get exists(): boolean[];
        set exists(value: boolean[]);
        static fromObject(data: {
            exists?: boolean[];
        }): _KeysExistResponse;
        toObject(): {
            exists?: boolean[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _KeysExistResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _KeysExistResponse;
    }
    export class _IncrementRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        get amount(): number;
        set amount(value: number);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        static fromObject(data: {
            cache_key?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
        }): _IncrementRequest;
        toObject(): {
            cache_key?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _IncrementRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _IncrementRequest;
    }
    export class _IncrementResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value?: number;
        });
        get value(): number;
        set value(value: number);
        static fromObject(data: {
            value?: number;
        }): _IncrementResponse;
        toObject(): {
            value?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _IncrementResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _IncrementResponse;
    }
    export class _UpdateTtlRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            cache_key?: Uint8Array;
        } & (({
            increase_to_milliseconds?: number;
            decrease_to_milliseconds?: never;
            overwrite_to_milliseconds?: never;
        } | {
            increase_to_milliseconds?: never;
            decrease_to_milliseconds?: number;
            overwrite_to_milliseconds?: never;
        } | {
            increase_to_milliseconds?: never;
            decrease_to_milliseconds?: never;
            overwrite_to_milliseconds?: number;
        }))));
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        get increase_to_milliseconds(): number;
        set increase_to_milliseconds(value: number);
        get has_increase_to_milliseconds(): boolean;
        get decrease_to_milliseconds(): number;
        set decrease_to_milliseconds(value: number);
        get has_decrease_to_milliseconds(): boolean;
        get overwrite_to_milliseconds(): number;
        set overwrite_to_milliseconds(value: number);
        get has_overwrite_to_milliseconds(): boolean;
        get update_ttl(): "none" | "increase_to_milliseconds" | "decrease_to_milliseconds" | "overwrite_to_milliseconds";
        static fromObject(data: {
            cache_key?: Uint8Array;
            increase_to_milliseconds?: number;
            decrease_to_milliseconds?: number;
            overwrite_to_milliseconds?: number;
        }): _UpdateTtlRequest;
        toObject(): {
            cache_key?: Uint8Array;
            increase_to_milliseconds?: number;
            decrease_to_milliseconds?: number;
            overwrite_to_milliseconds?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _UpdateTtlRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _UpdateTtlRequest;
    }
    export class _UpdateTtlResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            set?: _UpdateTtlResponse._Set;
            not_set?: never;
            missing?: never;
        } | {
            set?: never;
            not_set?: _UpdateTtlResponse._NotSet;
            missing?: never;
        } | {
            set?: never;
            not_set?: never;
            missing?: _UpdateTtlResponse._Missing;
        }))));
        get set(): _UpdateTtlResponse._Set;
        set set(value: _UpdateTtlResponse._Set);
        get has_set(): boolean;
        get not_set(): _UpdateTtlResponse._NotSet;
        set not_set(value: _UpdateTtlResponse._NotSet);
        get has_not_set(): boolean;
        get missing(): _UpdateTtlResponse._Missing;
        set missing(value: _UpdateTtlResponse._Missing);
        get has_missing(): boolean;
        get result(): "none" | "set" | "not_set" | "missing";
        static fromObject(data: {
            set?: ReturnType<typeof _UpdateTtlResponse._Set.prototype.toObject>;
            not_set?: ReturnType<typeof _UpdateTtlResponse._NotSet.prototype.toObject>;
            missing?: ReturnType<typeof _UpdateTtlResponse._Missing.prototype.toObject>;
        }): _UpdateTtlResponse;
        toObject(): {
            set?: ReturnType<typeof _UpdateTtlResponse._Set.prototype.toObject>;
            not_set?: ReturnType<typeof _UpdateTtlResponse._NotSet.prototype.toObject>;
            missing?: ReturnType<typeof _UpdateTtlResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _UpdateTtlResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _UpdateTtlResponse;
    }
    export namespace _UpdateTtlResponse {
        class _Set extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Set;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Set;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Set;
        }
        class _NotSet extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _NotSet;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _NotSet;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _NotSet;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ItemGetTtlRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        static fromObject(data: {
            cache_key?: Uint8Array;
        }): _ItemGetTtlRequest;
        toObject(): {
            cache_key?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ItemGetTtlRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ItemGetTtlRequest;
    }
    export class _ItemGetTtlResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ItemGetTtlResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ItemGetTtlResponse._Missing;
        }))));
        get found(): _ItemGetTtlResponse._Found;
        set found(value: _ItemGetTtlResponse._Found);
        get has_found(): boolean;
        get missing(): _ItemGetTtlResponse._Missing;
        set missing(value: _ItemGetTtlResponse._Missing);
        get has_missing(): boolean;
        get result(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ItemGetTtlResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ItemGetTtlResponse._Missing.prototype.toObject>;
        }): _ItemGetTtlResponse;
        toObject(): {
            found?: ReturnType<typeof _ItemGetTtlResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ItemGetTtlResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ItemGetTtlResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ItemGetTtlResponse;
    }
    export namespace _ItemGetTtlResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                remaining_ttl_millis?: number;
            });
            get remaining_ttl_millis(): number;
            set remaining_ttl_millis(value: number);
            static fromObject(data: {
                remaining_ttl_millis?: number;
            }): _Found;
            toObject(): {
                remaining_ttl_millis?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ItemGetTypeRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            cache_key?: Uint8Array;
        });
        get cache_key(): Uint8Array;
        set cache_key(value: Uint8Array);
        static fromObject(data: {
            cache_key?: Uint8Array;
        }): _ItemGetTypeRequest;
        toObject(): {
            cache_key?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ItemGetTypeRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ItemGetTypeRequest;
    }
    export class _ItemGetTypeResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ItemGetTypeResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ItemGetTypeResponse._Missing;
        }))));
        get found(): _ItemGetTypeResponse._Found;
        set found(value: _ItemGetTypeResponse._Found);
        get has_found(): boolean;
        get missing(): _ItemGetTypeResponse._Missing;
        set missing(value: _ItemGetTypeResponse._Missing);
        get has_missing(): boolean;
        get result(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ItemGetTypeResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ItemGetTypeResponse._Missing.prototype.toObject>;
        }): _ItemGetTypeResponse;
        toObject(): {
            found?: ReturnType<typeof _ItemGetTypeResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ItemGetTypeResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ItemGetTypeResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ItemGetTypeResponse;
    }
    export namespace _ItemGetTypeResponse {
        enum ItemType {
            SCALAR = 0,
            DICTIONARY = 1,
            SET = 2,
            LIST = 3,
            SORTED_SET = 4
        }
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                item_type?: _ItemGetTypeResponse.ItemType;
            });
            get item_type(): _ItemGetTypeResponse.ItemType;
            set item_type(value: _ItemGetTypeResponse.ItemType);
            static fromObject(data: {
                item_type?: _ItemGetTypeResponse.ItemType;
            }): _Found;
            toObject(): {
                item_type?: _ItemGetTypeResponse.ItemType;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _DictionaryGetRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dictionary_name?: Uint8Array;
            fields?: Uint8Array[];
        });
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        get fields(): Uint8Array[];
        set fields(value: Uint8Array[]);
        static fromObject(data: {
            dictionary_name?: Uint8Array;
            fields?: Uint8Array[];
        }): _DictionaryGetRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
            fields?: Uint8Array[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryGetRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryGetRequest;
    }
    export class _DictionaryGetResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _DictionaryGetResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _DictionaryGetResponse._Missing;
        }))));
        get found(): _DictionaryGetResponse._Found;
        set found(value: _DictionaryGetResponse._Found);
        get has_found(): boolean;
        get missing(): _DictionaryGetResponse._Missing;
        set missing(value: _DictionaryGetResponse._Missing);
        get has_missing(): boolean;
        get dictionary(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _DictionaryGetResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryGetResponse._Missing.prototype.toObject>;
        }): _DictionaryGetResponse;
        toObject(): {
            found?: ReturnType<typeof _DictionaryGetResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryGetResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryGetResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryGetResponse;
    }
    export namespace _DictionaryGetResponse {
        class _DictionaryGetResponsePart extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                result?: ECacheResult;
                cache_body?: Uint8Array;
            });
            get result(): ECacheResult;
            set result(value: ECacheResult);
            get cache_body(): Uint8Array;
            set cache_body(value: Uint8Array);
            static fromObject(data: {
                result?: ECacheResult;
                cache_body?: Uint8Array;
            }): _DictionaryGetResponsePart;
            toObject(): {
                result?: ECacheResult;
                cache_body?: Uint8Array;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryGetResponsePart;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _DictionaryGetResponsePart;
        }
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                items?: _DictionaryGetResponse._DictionaryGetResponsePart[];
            });
            get items(): _DictionaryGetResponse._DictionaryGetResponsePart[];
            set items(value: _DictionaryGetResponse._DictionaryGetResponsePart[]);
            static fromObject(data: {
                items?: ReturnType<typeof _DictionaryGetResponse._DictionaryGetResponsePart.prototype.toObject>[];
            }): _Found;
            toObject(): {
                items?: ReturnType<typeof _DictionaryGetResponse._DictionaryGetResponsePart.prototype.toObject>[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _DictionaryFetchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dictionary_name?: Uint8Array;
        });
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        static fromObject(data: {
            dictionary_name?: Uint8Array;
        }): _DictionaryFetchRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryFetchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryFetchRequest;
    }
    export class _DictionaryFieldValuePair extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            field?: Uint8Array;
            value?: Uint8Array;
        });
        get field(): Uint8Array;
        set field(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        static fromObject(data: {
            field?: Uint8Array;
            value?: Uint8Array;
        }): _DictionaryFieldValuePair;
        toObject(): {
            field?: Uint8Array;
            value?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryFieldValuePair;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryFieldValuePair;
    }
    export class _DictionaryFetchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _DictionaryFetchResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _DictionaryFetchResponse._Missing;
        }))));
        get found(): _DictionaryFetchResponse._Found;
        set found(value: _DictionaryFetchResponse._Found);
        get has_found(): boolean;
        get missing(): _DictionaryFetchResponse._Missing;
        set missing(value: _DictionaryFetchResponse._Missing);
        get has_missing(): boolean;
        get dictionary(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _DictionaryFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryFetchResponse._Missing.prototype.toObject>;
        }): _DictionaryFetchResponse;
        toObject(): {
            found?: ReturnType<typeof _DictionaryFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryFetchResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryFetchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryFetchResponse;
    }
    export namespace _DictionaryFetchResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                items?: _DictionaryFieldValuePair[];
            });
            get items(): _DictionaryFieldValuePair[];
            set items(value: _DictionaryFieldValuePair[]);
            static fromObject(data: {
                items?: ReturnType<typeof _DictionaryFieldValuePair.prototype.toObject>[];
            }): _Found;
            toObject(): {
                items?: ReturnType<typeof _DictionaryFieldValuePair.prototype.toObject>[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _DictionarySetRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dictionary_name?: Uint8Array;
            items?: _DictionaryFieldValuePair[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        });
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        get items(): _DictionaryFieldValuePair[];
        set items(value: _DictionaryFieldValuePair[]);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        static fromObject(data: {
            dictionary_name?: Uint8Array;
            items?: ReturnType<typeof _DictionaryFieldValuePair.prototype.toObject>[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _DictionarySetRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
            items?: ReturnType<typeof _DictionaryFieldValuePair.prototype.toObject>[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionarySetRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionarySetRequest;
    }
    export class _DictionarySetResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _DictionarySetResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionarySetResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionarySetResponse;
    }
    export class _DictionaryIncrementRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dictionary_name?: Uint8Array;
            field?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        });
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        get field(): Uint8Array;
        set field(value: Uint8Array);
        get amount(): number;
        set amount(value: number);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        static fromObject(data: {
            dictionary_name?: Uint8Array;
            field?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _DictionaryIncrementRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
            field?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryIncrementRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryIncrementRequest;
    }
    export class _DictionaryIncrementResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value?: number;
        });
        get value(): number;
        set value(value: number);
        static fromObject(data: {
            value?: number;
        }): _DictionaryIncrementResponse;
        toObject(): {
            value?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryIncrementResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryIncrementResponse;
    }
    export class _DictionaryDeleteRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            dictionary_name?: Uint8Array;
        } & (({
            some?: _DictionaryDeleteRequest.Some;
            all?: never;
        } | {
            some?: never;
            all?: _DictionaryDeleteRequest.All;
        }))));
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        get some(): _DictionaryDeleteRequest.Some;
        set some(value: _DictionaryDeleteRequest.Some);
        get has_some(): boolean;
        get all(): _DictionaryDeleteRequest.All;
        set all(value: _DictionaryDeleteRequest.All);
        get has_all(): boolean;
        get delete(): "some" | "none" | "all";
        static fromObject(data: {
            dictionary_name?: Uint8Array;
            some?: ReturnType<typeof _DictionaryDeleteRequest.Some.prototype.toObject>;
            all?: ReturnType<typeof _DictionaryDeleteRequest.All.prototype.toObject>;
        }): _DictionaryDeleteRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
            some?: ReturnType<typeof _DictionaryDeleteRequest.Some.prototype.toObject>;
            all?: ReturnType<typeof _DictionaryDeleteRequest.All.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryDeleteRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryDeleteRequest;
    }
    export namespace _DictionaryDeleteRequest {
        class Some extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                fields?: Uint8Array[];
            });
            get fields(): Uint8Array[];
            set fields(value: Uint8Array[]);
            static fromObject(data: {
                fields?: Uint8Array[];
            }): Some;
            toObject(): {
                fields?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Some;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): Some;
        }
        class All extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): All;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): All;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): All;
        }
    }
    export class _DictionaryDeleteResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _DictionaryDeleteResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryDeleteResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryDeleteResponse;
    }
    export class _DictionaryLengthRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dictionary_name?: Uint8Array;
        });
        get dictionary_name(): Uint8Array;
        set dictionary_name(value: Uint8Array);
        static fromObject(data: {
            dictionary_name?: Uint8Array;
        }): _DictionaryLengthRequest;
        toObject(): {
            dictionary_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryLengthRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryLengthRequest;
    }
    export class _DictionaryLengthResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _DictionaryLengthResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _DictionaryLengthResponse._Missing;
        }))));
        get found(): _DictionaryLengthResponse._Found;
        set found(value: _DictionaryLengthResponse._Found);
        get has_found(): boolean;
        get missing(): _DictionaryLengthResponse._Missing;
        set missing(value: _DictionaryLengthResponse._Missing);
        get has_missing(): boolean;
        get dictionary(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _DictionaryLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryLengthResponse._Missing.prototype.toObject>;
        }): _DictionaryLengthResponse;
        toObject(): {
            found?: ReturnType<typeof _DictionaryLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _DictionaryLengthResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _DictionaryLengthResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _DictionaryLengthResponse;
    }
    export namespace _DictionaryLengthResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                length?: number;
            });
            get length(): number;
            set length(value: number);
            static fromObject(data: {
                length?: number;
            }): _Found;
            toObject(): {
                length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetFetchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        static fromObject(data: {
            set_name?: Uint8Array;
        }): _SetFetchRequest;
        toObject(): {
            set_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetFetchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetFetchRequest;
    }
    export class _SetFetchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetFetchResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetFetchResponse._Missing;
        }))));
        get found(): _SetFetchResponse._Found;
        set found(value: _SetFetchResponse._Found);
        get has_found(): boolean;
        get missing(): _SetFetchResponse._Missing;
        set missing(value: _SetFetchResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetFetchResponse._Missing.prototype.toObject>;
        }): _SetFetchResponse;
        toObject(): {
            found?: ReturnType<typeof _SetFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetFetchResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetFetchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetFetchResponse;
    }
    export namespace _SetFetchResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                elements?: Uint8Array[];
            });
            get elements(): Uint8Array[];
            set elements(value: Uint8Array[]);
            static fromObject(data: {
                elements?: Uint8Array[];
            }): _Found;
            toObject(): {
                elements?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetSampleRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            limit?: number;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get limit(): number;
        set limit(value: number);
        static fromObject(data: {
            set_name?: Uint8Array;
            limit?: number;
        }): _SetSampleRequest;
        toObject(): {
            set_name?: Uint8Array;
            limit?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetSampleRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetSampleRequest;
    }
    export class _SetSampleResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetSampleResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetSampleResponse._Missing;
        }))));
        get found(): _SetSampleResponse._Found;
        set found(value: _SetSampleResponse._Found);
        get has_found(): boolean;
        get missing(): _SetSampleResponse._Missing;
        set missing(value: _SetSampleResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetSampleResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetSampleResponse._Missing.prototype.toObject>;
        }): _SetSampleResponse;
        toObject(): {
            found?: ReturnType<typeof _SetSampleResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetSampleResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetSampleResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetSampleResponse;
    }
    export namespace _SetSampleResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                elements?: Uint8Array[];
            });
            get elements(): Uint8Array[];
            set elements(value: Uint8Array[]);
            static fromObject(data: {
                elements?: Uint8Array[];
            }): _Found;
            toObject(): {
                elements?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetUnionRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get elements(): Uint8Array[];
        set elements(value: Uint8Array[]);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        static fromObject(data: {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _SetUnionRequest;
        toObject(): {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetUnionRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetUnionRequest;
    }
    export class _SetUnionResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _SetUnionResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetUnionResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetUnionResponse;
    }
    export class _SetDifferenceRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            set_name?: Uint8Array;
        } & (({
            minuend?: _SetDifferenceRequest._Minuend;
            subtrahend?: never;
        } | {
            minuend?: never;
            subtrahend?: _SetDifferenceRequest._Subtrahend;
        }))));
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get minuend(): _SetDifferenceRequest._Minuend;
        set minuend(value: _SetDifferenceRequest._Minuend);
        get has_minuend(): boolean;
        get subtrahend(): _SetDifferenceRequest._Subtrahend;
        set subtrahend(value: _SetDifferenceRequest._Subtrahend);
        get has_subtrahend(): boolean;
        get difference(): "none" | "minuend" | "subtrahend";
        static fromObject(data: {
            set_name?: Uint8Array;
            minuend?: ReturnType<typeof _SetDifferenceRequest._Minuend.prototype.toObject>;
            subtrahend?: ReturnType<typeof _SetDifferenceRequest._Subtrahend.prototype.toObject>;
        }): _SetDifferenceRequest;
        toObject(): {
            set_name?: Uint8Array;
            minuend?: ReturnType<typeof _SetDifferenceRequest._Minuend.prototype.toObject>;
            subtrahend?: ReturnType<typeof _SetDifferenceRequest._Subtrahend.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetDifferenceRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetDifferenceRequest;
    }
    export namespace _SetDifferenceRequest {
        class _Minuend extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                elements?: Uint8Array[];
            });
            get elements(): Uint8Array[];
            set elements(value: Uint8Array[]);
            static fromObject(data: {
                elements?: Uint8Array[];
            }): _Minuend;
            toObject(): {
                elements?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Minuend;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Minuend;
        }
        class _Subtrahend extends pb_1.Message {
            #private;
            constructor(data?: any[] | ({} & (({
                set?: _SetDifferenceRequest._Subtrahend._Set;
                identity?: never;
            } | {
                set?: never;
                identity?: _SetDifferenceRequest._Subtrahend._Identity;
            }))));
            get set(): _SetDifferenceRequest._Subtrahend._Set;
            set set(value: _SetDifferenceRequest._Subtrahend._Set);
            get has_set(): boolean;
            get identity(): _SetDifferenceRequest._Subtrahend._Identity;
            set identity(value: _SetDifferenceRequest._Subtrahend._Identity);
            get has_identity(): boolean;
            get subtrahend_set(): "none" | "set" | "identity";
            static fromObject(data: {
                set?: ReturnType<typeof _SetDifferenceRequest._Subtrahend._Set.prototype.toObject>;
                identity?: ReturnType<typeof _SetDifferenceRequest._Subtrahend._Identity.prototype.toObject>;
            }): _Subtrahend;
            toObject(): {
                set?: ReturnType<typeof _SetDifferenceRequest._Subtrahend._Set.prototype.toObject>;
                identity?: ReturnType<typeof _SetDifferenceRequest._Subtrahend._Identity.prototype.toObject>;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Subtrahend;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Subtrahend;
        }
        namespace _Subtrahend {
            class _Set extends pb_1.Message {
                #private;
                constructor(data?: any[] | {
                    elements?: Uint8Array[];
                });
                get elements(): Uint8Array[];
                set elements(value: Uint8Array[]);
                static fromObject(data: {
                    elements?: Uint8Array[];
                }): _Set;
                toObject(): {
                    elements?: Uint8Array[];
                };
                serialize(): Uint8Array;
                serialize(w: pb_1.BinaryWriter): void;
                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Set;
                serializeBinary(): Uint8Array;
                static deserializeBinary(bytes: Uint8Array): _Set;
            }
            class _Identity extends pb_1.Message {
                #private;
                constructor(data?: any[] | {});
                static fromObject(data: {}): _Identity;
                toObject(): {};
                serialize(): Uint8Array;
                serialize(w: pb_1.BinaryWriter): void;
                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Identity;
                serializeBinary(): Uint8Array;
                static deserializeBinary(bytes: Uint8Array): _Identity;
            }
        }
    }
    export class _SetDifferenceResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetDifferenceResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetDifferenceResponse._Missing;
        }))));
        get found(): _SetDifferenceResponse._Found;
        set found(value: _SetDifferenceResponse._Found);
        get has_found(): boolean;
        get missing(): _SetDifferenceResponse._Missing;
        set missing(value: _SetDifferenceResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetDifferenceResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetDifferenceResponse._Missing.prototype.toObject>;
        }): _SetDifferenceResponse;
        toObject(): {
            found?: ReturnType<typeof _SetDifferenceResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetDifferenceResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetDifferenceResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetDifferenceResponse;
    }
    export namespace _SetDifferenceResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Found;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetContainsRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get elements(): Uint8Array[];
        set elements(value: Uint8Array[]);
        static fromObject(data: {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
        }): _SetContainsRequest;
        toObject(): {
            set_name?: Uint8Array;
            elements?: Uint8Array[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetContainsRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetContainsRequest;
    }
    export class _SetContainsResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetContainsResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetContainsResponse._Missing;
        }))));
        get found(): _SetContainsResponse._Found;
        set found(value: _SetContainsResponse._Found);
        get has_found(): boolean;
        get missing(): _SetContainsResponse._Missing;
        set missing(value: _SetContainsResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetContainsResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetContainsResponse._Missing.prototype.toObject>;
        }): _SetContainsResponse;
        toObject(): {
            found?: ReturnType<typeof _SetContainsResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetContainsResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetContainsResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetContainsResponse;
    }
    export namespace _SetContainsResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                contains?: boolean[];
            });
            get contains(): boolean[];
            set contains(value: boolean[]);
            static fromObject(data: {
                contains?: boolean[];
            }): _Found;
            toObject(): {
                contains?: boolean[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetLengthRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        static fromObject(data: {
            set_name?: Uint8Array;
        }): _SetLengthRequest;
        toObject(): {
            set_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetLengthRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetLengthRequest;
    }
    export class _SetLengthResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetLengthResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetLengthResponse._Missing;
        }))));
        get found(): _SetLengthResponse._Found;
        set found(value: _SetLengthResponse._Found);
        get has_found(): boolean;
        get missing(): _SetLengthResponse._Missing;
        set missing(value: _SetLengthResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetLengthResponse._Missing.prototype.toObject>;
        }): _SetLengthResponse;
        toObject(): {
            found?: ReturnType<typeof _SetLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetLengthResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetLengthResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetLengthResponse;
    }
    export namespace _SetLengthResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                length?: number;
            });
            get length(): number;
            set length(value: number);
            static fromObject(data: {
                length?: number;
            }): _Found;
            toObject(): {
                length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SetPopRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            count?: number;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get count(): number;
        set count(value: number);
        static fromObject(data: {
            set_name?: Uint8Array;
            count?: number;
        }): _SetPopRequest;
        toObject(): {
            set_name?: Uint8Array;
            count?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetPopRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetPopRequest;
    }
    export class _SetPopResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SetPopResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SetPopResponse._Missing;
        }))));
        get found(): _SetPopResponse._Found;
        set found(value: _SetPopResponse._Found);
        get has_found(): boolean;
        get missing(): _SetPopResponse._Missing;
        set missing(value: _SetPopResponse._Missing);
        get has_missing(): boolean;
        get set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SetPopResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetPopResponse._Missing.prototype.toObject>;
        }): _SetPopResponse;
        toObject(): {
            found?: ReturnType<typeof _SetPopResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SetPopResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SetPopResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SetPopResponse;
    }
    export namespace _SetPopResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                elements?: Uint8Array[];
            });
            get elements(): Uint8Array[];
            set elements(value: Uint8Array[]);
            static fromObject(data: {
                elements?: Uint8Array[];
            }): _Found;
            toObject(): {
                elements?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListConcatenateFrontRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get values(): Uint8Array[];
        set values(value: Uint8Array[]);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        get truncate_back_to_size(): number;
        set truncate_back_to_size(value: number);
        static fromObject(data: {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        }): _ListConcatenateFrontRequest;
        toObject(): {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListConcatenateFrontRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListConcatenateFrontRequest;
    }
    export class _ListConcatenateFrontResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_length?: number;
        });
        get list_length(): number;
        set list_length(value: number);
        static fromObject(data: {
            list_length?: number;
        }): _ListConcatenateFrontResponse;
        toObject(): {
            list_length?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListConcatenateFrontResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListConcatenateFrontResponse;
    }
    export class _ListConcatenateBackRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get values(): Uint8Array[];
        set values(value: Uint8Array[]);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        get truncate_front_to_size(): number;
        set truncate_front_to_size(value: number);
        static fromObject(data: {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        }): _ListConcatenateBackRequest;
        toObject(): {
            list_name?: Uint8Array;
            values?: Uint8Array[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListConcatenateBackRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListConcatenateBackRequest;
    }
    export class _ListConcatenateBackResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_length?: number;
        });
        get list_length(): number;
        set list_length(value: number);
        static fromObject(data: {
            list_length?: number;
        }): _ListConcatenateBackResponse;
        toObject(): {
            list_length?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListConcatenateBackResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListConcatenateBackResponse;
    }
    export class _ListPushFrontRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        get truncate_back_to_size(): number;
        set truncate_back_to_size(value: number);
        static fromObject(data: {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        }): _ListPushFrontRequest;
        toObject(): {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_back_to_size?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPushFrontRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPushFrontRequest;
    }
    export class _ListPushFrontResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_length?: number;
        });
        get list_length(): number;
        set list_length(value: number);
        static fromObject(data: {
            list_length?: number;
        }): _ListPushFrontResponse;
        toObject(): {
            list_length?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPushFrontResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPushFrontResponse;
    }
    export class _ListPushBackRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        get truncate_front_to_size(): number;
        set truncate_front_to_size(value: number);
        static fromObject(data: {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        }): _ListPushBackRequest;
        toObject(): {
            list_name?: Uint8Array;
            value?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
            truncate_front_to_size?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPushBackRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPushBackRequest;
    }
    export class _ListPushBackResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_length?: number;
        });
        get list_length(): number;
        set list_length(value: number);
        static fromObject(data: {
            list_length?: number;
        }): _ListPushBackResponse;
        toObject(): {
            list_length?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPushBackResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPushBackResponse;
    }
    export class _ListPopFrontRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        static fromObject(data: {
            list_name?: Uint8Array;
        }): _ListPopFrontRequest;
        toObject(): {
            list_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPopFrontRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPopFrontRequest;
    }
    export class _ListPopFrontResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListPopFrontResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListPopFrontResponse._Missing;
        }))));
        get found(): _ListPopFrontResponse._Found;
        set found(value: _ListPopFrontResponse._Found);
        get has_found(): boolean;
        get missing(): _ListPopFrontResponse._Missing;
        set missing(value: _ListPopFrontResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListPopFrontResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListPopFrontResponse._Missing.prototype.toObject>;
        }): _ListPopFrontResponse;
        toObject(): {
            found?: ReturnType<typeof _ListPopFrontResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListPopFrontResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPopFrontResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPopFrontResponse;
    }
    export namespace _ListPopFrontResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                front?: Uint8Array;
                list_length?: number;
            });
            get front(): Uint8Array;
            set front(value: Uint8Array);
            get list_length(): number;
            set list_length(value: number);
            static fromObject(data: {
                front?: Uint8Array;
                list_length?: number;
            }): _Found;
            toObject(): {
                front?: Uint8Array;
                list_length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListPopBackRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        static fromObject(data: {
            list_name?: Uint8Array;
        }): _ListPopBackRequest;
        toObject(): {
            list_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPopBackRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPopBackRequest;
    }
    export class _ListPopBackResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListPopBackResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListPopBackResponse._Missing;
        }))));
        get found(): _ListPopBackResponse._Found;
        set found(value: _ListPopBackResponse._Found);
        get has_found(): boolean;
        get missing(): _ListPopBackResponse._Missing;
        set missing(value: _ListPopBackResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListPopBackResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListPopBackResponse._Missing.prototype.toObject>;
        }): _ListPopBackResponse;
        toObject(): {
            found?: ReturnType<typeof _ListPopBackResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListPopBackResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListPopBackResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListPopBackResponse;
    }
    export namespace _ListPopBackResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                back?: Uint8Array;
                list_length?: number;
            });
            get back(): Uint8Array;
            set back(value: Uint8Array);
            get list_length(): number;
            set list_length(value: number);
            static fromObject(data: {
                back?: Uint8Array;
                list_length?: number;
            }): _Found;
            toObject(): {
                back?: Uint8Array;
                list_length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListRange extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            begin_index?: number;
            count?: number;
        });
        get begin_index(): number;
        set begin_index(value: number);
        get count(): number;
        set count(value: number);
        static fromObject(data: {
            begin_index?: number;
            count?: number;
        }): _ListRange;
        toObject(): {
            begin_index?: number;
            count?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRange;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListRange;
    }
    export class _ListEraseRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            list_name?: Uint8Array;
        } & (({
            some?: _ListEraseRequest._ListRanges;
            all?: never;
        } | {
            some?: never;
            all?: _ListEraseRequest._All;
        }))));
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get some(): _ListEraseRequest._ListRanges;
        set some(value: _ListEraseRequest._ListRanges);
        get has_some(): boolean;
        get all(): _ListEraseRequest._All;
        set all(value: _ListEraseRequest._All);
        get has_all(): boolean;
        get erase(): "some" | "none" | "all";
        static fromObject(data: {
            list_name?: Uint8Array;
            some?: ReturnType<typeof _ListEraseRequest._ListRanges.prototype.toObject>;
            all?: ReturnType<typeof _ListEraseRequest._All.prototype.toObject>;
        }): _ListEraseRequest;
        toObject(): {
            list_name?: Uint8Array;
            some?: ReturnType<typeof _ListEraseRequest._ListRanges.prototype.toObject>;
            all?: ReturnType<typeof _ListEraseRequest._All.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListEraseRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListEraseRequest;
    }
    export namespace _ListEraseRequest {
        class _All extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _All;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _All;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _All;
        }
        class _ListRanges extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                ranges?: _ListRange[];
            });
            get ranges(): _ListRange[];
            set ranges(value: _ListRange[]);
            static fromObject(data: {
                ranges?: ReturnType<typeof _ListRange.prototype.toObject>[];
            }): _ListRanges;
            toObject(): {
                ranges?: ReturnType<typeof _ListRange.prototype.toObject>[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRanges;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _ListRanges;
        }
    }
    export class _ListEraseResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListEraseResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListEraseResponse._Missing;
        }))));
        get found(): _ListEraseResponse._Found;
        set found(value: _ListEraseResponse._Found);
        get has_found(): boolean;
        get missing(): _ListEraseResponse._Missing;
        set missing(value: _ListEraseResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListEraseResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListEraseResponse._Missing.prototype.toObject>;
        }): _ListEraseResponse;
        toObject(): {
            found?: ReturnType<typeof _ListEraseResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListEraseResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListEraseResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListEraseResponse;
    }
    export namespace _ListEraseResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                list_length?: number;
            });
            get list_length(): number;
            set list_length(value: number);
            static fromObject(data: {
                list_length?: number;
            }): _Found;
            toObject(): {
                list_length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListRemoveRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            list_name?: Uint8Array;
        } & (({
            all_elements_with_value?: Uint8Array;
        }))));
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get all_elements_with_value(): Uint8Array;
        set all_elements_with_value(value: Uint8Array);
        get has_all_elements_with_value(): boolean;
        get remove(): "none" | "all_elements_with_value";
        static fromObject(data: {
            list_name?: Uint8Array;
            all_elements_with_value?: Uint8Array;
        }): _ListRemoveRequest;
        toObject(): {
            list_name?: Uint8Array;
            all_elements_with_value?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRemoveRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListRemoveRequest;
    }
    export class _ListRemoveResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListRemoveResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListRemoveResponse._Missing;
        }))));
        get found(): _ListRemoveResponse._Found;
        set found(value: _ListRemoveResponse._Found);
        get has_found(): boolean;
        get missing(): _ListRemoveResponse._Missing;
        set missing(value: _ListRemoveResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListRemoveResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListRemoveResponse._Missing.prototype.toObject>;
        }): _ListRemoveResponse;
        toObject(): {
            found?: ReturnType<typeof _ListRemoveResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListRemoveResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRemoveResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListRemoveResponse;
    }
    export namespace _ListRemoveResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                list_length?: number;
            });
            get list_length(): number;
            set list_length(value: number);
            static fromObject(data: {
                list_length?: number;
            }): _Found;
            toObject(): {
                list_length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _Unbounded extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _Unbounded;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Unbounded;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _Unbounded;
    }
    export class _ListFetchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            list_name?: Uint8Array;
        } & (({
            unbounded_start?: _Unbounded;
            inclusive_start?: never;
        } | {
            unbounded_start?: never;
            inclusive_start?: number;
        }) | ({
            unbounded_end?: _Unbounded;
            exclusive_end?: never;
        } | {
            unbounded_end?: never;
            exclusive_end?: number;
        }))));
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get unbounded_start(): _Unbounded;
        set unbounded_start(value: _Unbounded);
        get has_unbounded_start(): boolean;
        get inclusive_start(): number;
        set inclusive_start(value: number);
        get has_inclusive_start(): boolean;
        get unbounded_end(): _Unbounded;
        set unbounded_end(value: _Unbounded);
        get has_unbounded_end(): boolean;
        get exclusive_end(): number;
        set exclusive_end(value: number);
        get has_exclusive_end(): boolean;
        get start_index(): "none" | "unbounded_start" | "inclusive_start";
        get end_index(): "none" | "unbounded_end" | "exclusive_end";
        static fromObject(data: {
            list_name?: Uint8Array;
            unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_start?: number;
            unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
            exclusive_end?: number;
        }): _ListFetchRequest;
        toObject(): {
            list_name?: Uint8Array;
            unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_start?: number;
            unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
            exclusive_end?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListFetchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListFetchRequest;
    }
    export class _ListRetainRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            list_name?: Uint8Array;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        } & (({
            unbounded_start?: _Unbounded;
            inclusive_start?: never;
        } | {
            unbounded_start?: never;
            inclusive_start?: number;
        }) | ({
            unbounded_end?: _Unbounded;
            exclusive_end?: never;
        } | {
            unbounded_end?: never;
            exclusive_end?: number;
        }))));
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        get unbounded_start(): _Unbounded;
        set unbounded_start(value: _Unbounded);
        get has_unbounded_start(): boolean;
        get inclusive_start(): number;
        set inclusive_start(value: number);
        get has_inclusive_start(): boolean;
        get unbounded_end(): _Unbounded;
        set unbounded_end(value: _Unbounded);
        get has_unbounded_end(): boolean;
        get exclusive_end(): number;
        set exclusive_end(value: number);
        get has_exclusive_end(): boolean;
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        get start_index(): "none" | "unbounded_start" | "inclusive_start";
        get end_index(): "none" | "unbounded_end" | "exclusive_end";
        static fromObject(data: {
            list_name?: Uint8Array;
            unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_start?: number;
            unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
            exclusive_end?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _ListRetainRequest;
        toObject(): {
            list_name?: Uint8Array;
            unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_start?: number;
            unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
            exclusive_end?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRetainRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListRetainRequest;
    }
    export class _ListRetainResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListRetainResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListRetainResponse._Missing;
        }))));
        get found(): _ListRetainResponse._Found;
        set found(value: _ListRetainResponse._Found);
        get has_found(): boolean;
        get missing(): _ListRetainResponse._Missing;
        set missing(value: _ListRetainResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListRetainResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListRetainResponse._Missing.prototype.toObject>;
        }): _ListRetainResponse;
        toObject(): {
            found?: ReturnType<typeof _ListRetainResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListRetainResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListRetainResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListRetainResponse;
    }
    export namespace _ListRetainResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                list_length?: number;
            });
            get list_length(): number;
            set list_length(value: number);
            static fromObject(data: {
                list_length?: number;
            }): _Found;
            toObject(): {
                list_length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListFetchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListFetchResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListFetchResponse._Missing;
        }))));
        get found(): _ListFetchResponse._Found;
        set found(value: _ListFetchResponse._Found);
        get has_found(): boolean;
        get missing(): _ListFetchResponse._Missing;
        set missing(value: _ListFetchResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListFetchResponse._Missing.prototype.toObject>;
        }): _ListFetchResponse;
        toObject(): {
            found?: ReturnType<typeof _ListFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListFetchResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListFetchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListFetchResponse;
    }
    export namespace _ListFetchResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                values?: Uint8Array[];
            });
            get values(): Uint8Array[];
            set values(value: Uint8Array[]);
            static fromObject(data: {
                values?: Uint8Array[];
            }): _Found;
            toObject(): {
                values?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _ListLengthRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            list_name?: Uint8Array;
        });
        get list_name(): Uint8Array;
        set list_name(value: Uint8Array);
        static fromObject(data: {
            list_name?: Uint8Array;
        }): _ListLengthRequest;
        toObject(): {
            list_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListLengthRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListLengthRequest;
    }
    export class _ListLengthResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _ListLengthResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _ListLengthResponse._Missing;
        }))));
        get found(): _ListLengthResponse._Found;
        set found(value: _ListLengthResponse._Found);
        get has_found(): boolean;
        get missing(): _ListLengthResponse._Missing;
        set missing(value: _ListLengthResponse._Missing);
        get has_missing(): boolean;
        get list(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _ListLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListLengthResponse._Missing.prototype.toObject>;
        }): _ListLengthResponse;
        toObject(): {
            found?: ReturnType<typeof _ListLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _ListLengthResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ListLengthResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _ListLengthResponse;
    }
    export namespace _ListLengthResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                length?: number;
            });
            get length(): number;
            set length(value: number);
            static fromObject(data: {
                length?: number;
            }): _Found;
            toObject(): {
                length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SortedSetElement extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            value?: Uint8Array;
            score?: number;
        });
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get score(): number;
        set score(value: number);
        static fromObject(data: {
            value?: Uint8Array;
            score?: number;
        }): _SortedSetElement;
        toObject(): {
            value?: Uint8Array;
            score?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetElement;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetElement;
    }
    export class _SortedSetPutRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            elements?: _SortedSetElement[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get elements(): _SortedSetElement[];
        set elements(value: _SortedSetElement[]);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        static fromObject(data: {
            set_name?: Uint8Array;
            elements?: ReturnType<typeof _SortedSetElement.prototype.toObject>[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _SortedSetPutRequest;
        toObject(): {
            set_name?: Uint8Array;
            elements?: ReturnType<typeof _SortedSetElement.prototype.toObject>[];
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetPutRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetPutRequest;
    }
    export class _SortedSetPutResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _SortedSetPutResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetPutResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetPutResponse;
    }
    export class _SortedSetFetchRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            set_name?: Uint8Array;
            order?: _SortedSetFetchRequest.Order;
            with_scores?: boolean;
        } & (({
            by_index?: _SortedSetFetchRequest._ByIndex;
            by_score?: never;
        } | {
            by_index?: never;
            by_score?: _SortedSetFetchRequest._ByScore;
        }))));
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get order(): _SortedSetFetchRequest.Order;
        set order(value: _SortedSetFetchRequest.Order);
        get with_scores(): boolean;
        set with_scores(value: boolean);
        get by_index(): _SortedSetFetchRequest._ByIndex;
        set by_index(value: _SortedSetFetchRequest._ByIndex);
        get has_by_index(): boolean;
        get by_score(): _SortedSetFetchRequest._ByScore;
        set by_score(value: _SortedSetFetchRequest._ByScore);
        get has_by_score(): boolean;
        get range(): "none" | "by_index" | "by_score";
        static fromObject(data: {
            set_name?: Uint8Array;
            order?: _SortedSetFetchRequest.Order;
            with_scores?: boolean;
            by_index?: ReturnType<typeof _SortedSetFetchRequest._ByIndex.prototype.toObject>;
            by_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore.prototype.toObject>;
        }): _SortedSetFetchRequest;
        toObject(): {
            set_name?: Uint8Array;
            order?: _SortedSetFetchRequest.Order;
            with_scores?: boolean;
            by_index?: ReturnType<typeof _SortedSetFetchRequest._ByIndex.prototype.toObject>;
            by_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetFetchRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetFetchRequest;
    }
    export namespace _SortedSetFetchRequest {
        enum Order {
            ASCENDING = 0,
            DESCENDING = 1
        }
        class _ByIndex extends pb_1.Message {
            #private;
            constructor(data?: any[] | ({} & (({
                unbounded_start?: _Unbounded;
                inclusive_start_index?: never;
            } | {
                unbounded_start?: never;
                inclusive_start_index?: number;
            }) | ({
                unbounded_end?: _Unbounded;
                exclusive_end_index?: never;
            } | {
                unbounded_end?: never;
                exclusive_end_index?: number;
            }))));
            get unbounded_start(): _Unbounded;
            set unbounded_start(value: _Unbounded);
            get has_unbounded_start(): boolean;
            get inclusive_start_index(): number;
            set inclusive_start_index(value: number);
            get has_inclusive_start_index(): boolean;
            get unbounded_end(): _Unbounded;
            set unbounded_end(value: _Unbounded);
            get has_unbounded_end(): boolean;
            get exclusive_end_index(): number;
            set exclusive_end_index(value: number);
            get has_exclusive_end_index(): boolean;
            get start(): "none" | "unbounded_start" | "inclusive_start_index";
            get end(): "none" | "unbounded_end" | "exclusive_end_index";
            static fromObject(data: {
                unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
                inclusive_start_index?: number;
                unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
                exclusive_end_index?: number;
            }): _ByIndex;
            toObject(): {
                unbounded_start?: ReturnType<typeof _Unbounded.prototype.toObject>;
                inclusive_start_index?: number;
                unbounded_end?: ReturnType<typeof _Unbounded.prototype.toObject>;
                exclusive_end_index?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ByIndex;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _ByIndex;
        }
        class _ByScore extends pb_1.Message {
            #private;
            constructor(data?: any[] | ({
                offset?: number;
                count?: number;
            } & (({
                unbounded_min?: _Unbounded;
                min_score?: never;
            } | {
                unbounded_min?: never;
                min_score?: _SortedSetFetchRequest._ByScore._Score;
            }) | ({
                unbounded_max?: _Unbounded;
                max_score?: never;
            } | {
                unbounded_max?: never;
                max_score?: _SortedSetFetchRequest._ByScore._Score;
            }))));
            get unbounded_min(): _Unbounded;
            set unbounded_min(value: _Unbounded);
            get has_unbounded_min(): boolean;
            get min_score(): _SortedSetFetchRequest._ByScore._Score;
            set min_score(value: _SortedSetFetchRequest._ByScore._Score);
            get has_min_score(): boolean;
            get unbounded_max(): _Unbounded;
            set unbounded_max(value: _Unbounded);
            get has_unbounded_max(): boolean;
            get max_score(): _SortedSetFetchRequest._ByScore._Score;
            set max_score(value: _SortedSetFetchRequest._ByScore._Score);
            get has_max_score(): boolean;
            get offset(): number;
            set offset(value: number);
            get count(): number;
            set count(value: number);
            get min(): "none" | "unbounded_min" | "min_score";
            get max(): "none" | "unbounded_max" | "max_score";
            static fromObject(data: {
                unbounded_min?: ReturnType<typeof _Unbounded.prototype.toObject>;
                min_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore._Score.prototype.toObject>;
                unbounded_max?: ReturnType<typeof _Unbounded.prototype.toObject>;
                max_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore._Score.prototype.toObject>;
                offset?: number;
                count?: number;
            }): _ByScore;
            toObject(): {
                unbounded_min?: ReturnType<typeof _Unbounded.prototype.toObject>;
                min_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore._Score.prototype.toObject>;
                unbounded_max?: ReturnType<typeof _Unbounded.prototype.toObject>;
                max_score?: ReturnType<typeof _SortedSetFetchRequest._ByScore._Score.prototype.toObject>;
                offset?: number;
                count?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ByScore;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _ByScore;
        }
        namespace _ByScore {
            class _Score extends pb_1.Message {
                #private;
                constructor(data?: any[] | {
                    score?: number;
                    exclusive?: boolean;
                });
                get score(): number;
                set score(value: number);
                get exclusive(): boolean;
                set exclusive(value: boolean);
                static fromObject(data: {
                    score?: number;
                    exclusive?: boolean;
                }): _Score;
                toObject(): {
                    score?: number;
                    exclusive?: boolean;
                };
                serialize(): Uint8Array;
                serialize(w: pb_1.BinaryWriter): void;
                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Score;
                serializeBinary(): Uint8Array;
                static deserializeBinary(bytes: Uint8Array): _Score;
            }
        }
    }
    export class _SortedSetFetchResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SortedSetFetchResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SortedSetFetchResponse._Missing;
        }))));
        get found(): _SortedSetFetchResponse._Found;
        set found(value: _SortedSetFetchResponse._Found);
        get has_found(): boolean;
        get missing(): _SortedSetFetchResponse._Missing;
        set missing(value: _SortedSetFetchResponse._Missing);
        get has_missing(): boolean;
        get sorted_set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SortedSetFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetFetchResponse._Missing.prototype.toObject>;
        }): _SortedSetFetchResponse;
        toObject(): {
            found?: ReturnType<typeof _SortedSetFetchResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetFetchResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetFetchResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetFetchResponse;
    }
    export namespace _SortedSetFetchResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | ({} & (({
                values_with_scores?: _SortedSetFetchResponse._Found._ValuesWithScores;
                values?: never;
            } | {
                values_with_scores?: never;
                values?: _SortedSetFetchResponse._Found._Values;
            }))));
            get values_with_scores(): _SortedSetFetchResponse._Found._ValuesWithScores;
            set values_with_scores(value: _SortedSetFetchResponse._Found._ValuesWithScores);
            get has_values_with_scores(): boolean;
            get values(): _SortedSetFetchResponse._Found._Values;
            set values(value: _SortedSetFetchResponse._Found._Values);
            get has_values(): boolean;
            get elements(): "values" | "none" | "values_with_scores";
            static fromObject(data: {
                values_with_scores?: ReturnType<typeof _SortedSetFetchResponse._Found._ValuesWithScores.prototype.toObject>;
                values?: ReturnType<typeof _SortedSetFetchResponse._Found._Values.prototype.toObject>;
            }): _Found;
            toObject(): {
                values_with_scores?: ReturnType<typeof _SortedSetFetchResponse._Found._ValuesWithScores.prototype.toObject>;
                values?: ReturnType<typeof _SortedSetFetchResponse._Found._Values.prototype.toObject>;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        namespace _Found {
            class _ValuesWithScores extends pb_1.Message {
                #private;
                constructor(data?: any[] | {
                    elements?: _SortedSetElement[];
                });
                get elements(): _SortedSetElement[];
                set elements(value: _SortedSetElement[]);
                static fromObject(data: {
                    elements?: ReturnType<typeof _SortedSetElement.prototype.toObject>[];
                }): _ValuesWithScores;
                toObject(): {
                    elements?: ReturnType<typeof _SortedSetElement.prototype.toObject>[];
                };
                serialize(): Uint8Array;
                serialize(w: pb_1.BinaryWriter): void;
                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _ValuesWithScores;
                serializeBinary(): Uint8Array;
                static deserializeBinary(bytes: Uint8Array): _ValuesWithScores;
            }
            class _Values extends pb_1.Message {
                #private;
                constructor(data?: any[] | {
                    values?: Uint8Array[];
                });
                get values(): Uint8Array[];
                set values(value: Uint8Array[]);
                static fromObject(data: {
                    values?: Uint8Array[];
                }): _Values;
                toObject(): {
                    values?: Uint8Array[];
                };
                serialize(): Uint8Array;
                serialize(w: pb_1.BinaryWriter): void;
                static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Values;
                serializeBinary(): Uint8Array;
                static deserializeBinary(bytes: Uint8Array): _Values;
            }
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SortedSetGetScoreRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            values?: Uint8Array[];
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get values(): Uint8Array[];
        set values(value: Uint8Array[]);
        static fromObject(data: {
            set_name?: Uint8Array;
            values?: Uint8Array[];
        }): _SortedSetGetScoreRequest;
        toObject(): {
            set_name?: Uint8Array;
            values?: Uint8Array[];
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetGetScoreRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetGetScoreRequest;
    }
    export class _SortedSetGetScoreResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SortedSetGetScoreResponse._SortedSetFound;
            missing?: never;
        } | {
            found?: never;
            missing?: _SortedSetGetScoreResponse._SortedSetMissing;
        }))));
        get found(): _SortedSetGetScoreResponse._SortedSetFound;
        set found(value: _SortedSetGetScoreResponse._SortedSetFound);
        get has_found(): boolean;
        get missing(): _SortedSetGetScoreResponse._SortedSetMissing;
        set missing(value: _SortedSetGetScoreResponse._SortedSetMissing);
        get has_missing(): boolean;
        get sorted_set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetFound.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetMissing.prototype.toObject>;
        }): _SortedSetGetScoreResponse;
        toObject(): {
            found?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetFound.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetMissing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetGetScoreResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetGetScoreResponse;
    }
    export namespace _SortedSetGetScoreResponse {
        class _SortedSetGetScoreResponsePart extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                result?: ECacheResult;
                score?: number;
            });
            get result(): ECacheResult;
            set result(value: ECacheResult);
            get score(): number;
            set score(value: number);
            static fromObject(data: {
                result?: ECacheResult;
                score?: number;
            }): _SortedSetGetScoreResponsePart;
            toObject(): {
                result?: ECacheResult;
                score?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetGetScoreResponsePart;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _SortedSetGetScoreResponsePart;
        }
        class _SortedSetFound extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                elements?: _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart[];
            });
            get elements(): _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart[];
            set elements(value: _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart[]);
            static fromObject(data: {
                elements?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart.prototype.toObject>[];
            }): _SortedSetFound;
            toObject(): {
                elements?: ReturnType<typeof _SortedSetGetScoreResponse._SortedSetGetScoreResponsePart.prototype.toObject>[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetFound;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _SortedSetFound;
        }
        class _SortedSetMissing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _SortedSetMissing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetMissing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _SortedSetMissing;
        }
    }
    export class _SortedSetRemoveRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            set_name?: Uint8Array;
        } & (({
            all?: _SortedSetRemoveRequest._All;
            some?: never;
        } | {
            all?: never;
            some?: _SortedSetRemoveRequest._Some;
        }))));
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get all(): _SortedSetRemoveRequest._All;
        set all(value: _SortedSetRemoveRequest._All);
        get has_all(): boolean;
        get some(): _SortedSetRemoveRequest._Some;
        set some(value: _SortedSetRemoveRequest._Some);
        get has_some(): boolean;
        get remove_elements(): "some" | "none" | "all";
        static fromObject(data: {
            set_name?: Uint8Array;
            all?: ReturnType<typeof _SortedSetRemoveRequest._All.prototype.toObject>;
            some?: ReturnType<typeof _SortedSetRemoveRequest._Some.prototype.toObject>;
        }): _SortedSetRemoveRequest;
        toObject(): {
            set_name?: Uint8Array;
            all?: ReturnType<typeof _SortedSetRemoveRequest._All.prototype.toObject>;
            some?: ReturnType<typeof _SortedSetRemoveRequest._Some.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetRemoveRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetRemoveRequest;
    }
    export namespace _SortedSetRemoveRequest {
        class _All extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _All;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _All;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _All;
        }
        class _Some extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                values?: Uint8Array[];
            });
            get values(): Uint8Array[];
            set values(value: Uint8Array[]);
            static fromObject(data: {
                values?: Uint8Array[];
            }): _Some;
            toObject(): {
                values?: Uint8Array[];
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Some;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Some;
        }
    }
    export class _SortedSetRemoveResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {});
        static fromObject(data: {}): _SortedSetRemoveResponse;
        toObject(): {};
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetRemoveResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetRemoveResponse;
    }
    export class _SortedSetIncrementRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            value?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get amount(): number;
        set amount(value: number);
        get ttl_milliseconds(): number;
        set ttl_milliseconds(value: number);
        get refresh_ttl(): boolean;
        set refresh_ttl(value: boolean);
        static fromObject(data: {
            set_name?: Uint8Array;
            value?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        }): _SortedSetIncrementRequest;
        toObject(): {
            set_name?: Uint8Array;
            value?: Uint8Array;
            amount?: number;
            ttl_milliseconds?: number;
            refresh_ttl?: boolean;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetIncrementRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetIncrementRequest;
    }
    export class _SortedSetIncrementResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            score?: number;
        });
        get score(): number;
        set score(value: number);
        static fromObject(data: {
            score?: number;
        }): _SortedSetIncrementResponse;
        toObject(): {
            score?: number;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetIncrementResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetIncrementResponse;
    }
    export class _SortedSetGetRankRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
            value?: Uint8Array;
            order?: _SortedSetGetRankRequest.Order;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get order(): _SortedSetGetRankRequest.Order;
        set order(value: _SortedSetGetRankRequest.Order);
        static fromObject(data: {
            set_name?: Uint8Array;
            value?: Uint8Array;
            order?: _SortedSetGetRankRequest.Order;
        }): _SortedSetGetRankRequest;
        toObject(): {
            set_name?: Uint8Array;
            value?: Uint8Array;
            order?: _SortedSetGetRankRequest.Order;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetGetRankRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetGetRankRequest;
    }
    export namespace _SortedSetGetRankRequest {
        enum Order {
            ASCENDING = 0,
            DESCENDING = 1
        }
    }
    export class _SortedSetGetRankResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            element_rank?: _SortedSetGetRankResponse._RankResponsePart;
            missing?: never;
        } | {
            element_rank?: never;
            missing?: _SortedSetGetRankResponse._SortedSetMissing;
        }))));
        get element_rank(): _SortedSetGetRankResponse._RankResponsePart;
        set element_rank(value: _SortedSetGetRankResponse._RankResponsePart);
        get has_element_rank(): boolean;
        get missing(): _SortedSetGetRankResponse._SortedSetMissing;
        set missing(value: _SortedSetGetRankResponse._SortedSetMissing);
        get has_missing(): boolean;
        get rank(): "none" | "missing" | "element_rank";
        static fromObject(data: {
            element_rank?: ReturnType<typeof _SortedSetGetRankResponse._RankResponsePart.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetGetRankResponse._SortedSetMissing.prototype.toObject>;
        }): _SortedSetGetRankResponse;
        toObject(): {
            element_rank?: ReturnType<typeof _SortedSetGetRankResponse._RankResponsePart.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetGetRankResponse._SortedSetMissing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetGetRankResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetGetRankResponse;
    }
    export namespace _SortedSetGetRankResponse {
        class _RankResponsePart extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                result?: ECacheResult;
                rank?: number;
            });
            get result(): ECacheResult;
            set result(value: ECacheResult);
            get rank(): number;
            set rank(value: number);
            static fromObject(data: {
                result?: ECacheResult;
                rank?: number;
            }): _RankResponsePart;
            toObject(): {
                result?: ECacheResult;
                rank?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _RankResponsePart;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _RankResponsePart;
        }
        class _SortedSetMissing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _SortedSetMissing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetMissing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _SortedSetMissing;
        }
    }
    export class _SortedSetLengthRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            set_name?: Uint8Array;
        });
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        static fromObject(data: {
            set_name?: Uint8Array;
        }): _SortedSetLengthRequest;
        toObject(): {
            set_name?: Uint8Array;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetLengthRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetLengthRequest;
    }
    export class _SortedSetLengthResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SortedSetLengthResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SortedSetLengthResponse._Missing;
        }))));
        get found(): _SortedSetLengthResponse._Found;
        set found(value: _SortedSetLengthResponse._Found);
        get has_found(): boolean;
        get missing(): _SortedSetLengthResponse._Missing;
        set missing(value: _SortedSetLengthResponse._Missing);
        get has_missing(): boolean;
        get sorted_set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SortedSetLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetLengthResponse._Missing.prototype.toObject>;
        }): _SortedSetLengthResponse;
        toObject(): {
            found?: ReturnType<typeof _SortedSetLengthResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetLengthResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetLengthResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetLengthResponse;
    }
    export namespace _SortedSetLengthResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                length?: number;
            });
            get length(): number;
            set length(value: number);
            static fromObject(data: {
                length?: number;
            }): _Found;
            toObject(): {
                length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    export class _SortedSetLengthByScoreRequest extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            set_name?: Uint8Array;
        } & (({
            inclusive_min?: number;
            exclusive_min?: never;
            unbounded_min?: never;
        } | {
            inclusive_min?: never;
            exclusive_min?: number;
            unbounded_min?: never;
        } | {
            inclusive_min?: never;
            exclusive_min?: never;
            unbounded_min?: _Unbounded;
        }) | ({
            inclusive_max?: number;
            exclusive_max?: never;
            unbounded_max?: never;
        } | {
            inclusive_max?: never;
            exclusive_max?: number;
            unbounded_max?: never;
        } | {
            inclusive_max?: never;
            exclusive_max?: never;
            unbounded_max?: _Unbounded;
        }))));
        get set_name(): Uint8Array;
        set set_name(value: Uint8Array);
        get inclusive_min(): number;
        set inclusive_min(value: number);
        get has_inclusive_min(): boolean;
        get exclusive_min(): number;
        set exclusive_min(value: number);
        get has_exclusive_min(): boolean;
        get unbounded_min(): _Unbounded;
        set unbounded_min(value: _Unbounded);
        get has_unbounded_min(): boolean;
        get inclusive_max(): number;
        set inclusive_max(value: number);
        get has_inclusive_max(): boolean;
        get exclusive_max(): number;
        set exclusive_max(value: number);
        get has_exclusive_max(): boolean;
        get unbounded_max(): _Unbounded;
        set unbounded_max(value: _Unbounded);
        get has_unbounded_max(): boolean;
        get min(): "none" | "unbounded_min" | "inclusive_min" | "exclusive_min";
        get max(): "none" | "unbounded_max" | "inclusive_max" | "exclusive_max";
        static fromObject(data: {
            set_name?: Uint8Array;
            inclusive_min?: number;
            exclusive_min?: number;
            unbounded_min?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_max?: number;
            exclusive_max?: number;
            unbounded_max?: ReturnType<typeof _Unbounded.prototype.toObject>;
        }): _SortedSetLengthByScoreRequest;
        toObject(): {
            set_name?: Uint8Array;
            inclusive_min?: number;
            exclusive_min?: number;
            unbounded_min?: ReturnType<typeof _Unbounded.prototype.toObject>;
            inclusive_max?: number;
            exclusive_max?: number;
            unbounded_max?: ReturnType<typeof _Unbounded.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetLengthByScoreRequest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetLengthByScoreRequest;
    }
    export class _SortedSetLengthByScoreResponse extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            found?: _SortedSetLengthByScoreResponse._Found;
            missing?: never;
        } | {
            found?: never;
            missing?: _SortedSetLengthByScoreResponse._Missing;
        }))));
        get found(): _SortedSetLengthByScoreResponse._Found;
        set found(value: _SortedSetLengthByScoreResponse._Found);
        get has_found(): boolean;
        get missing(): _SortedSetLengthByScoreResponse._Missing;
        set missing(value: _SortedSetLengthByScoreResponse._Missing);
        get has_missing(): boolean;
        get sorted_set(): "none" | "missing" | "found";
        static fromObject(data: {
            found?: ReturnType<typeof _SortedSetLengthByScoreResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetLengthByScoreResponse._Missing.prototype.toObject>;
        }): _SortedSetLengthByScoreResponse;
        toObject(): {
            found?: ReturnType<typeof _SortedSetLengthByScoreResponse._Found.prototype.toObject>;
            missing?: ReturnType<typeof _SortedSetLengthByScoreResponse._Missing.prototype.toObject>;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _SortedSetLengthByScoreResponse;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): _SortedSetLengthByScoreResponse;
    }
    export namespace _SortedSetLengthByScoreResponse {
        class _Found extends pb_1.Message {
            #private;
            constructor(data?: any[] | {
                length?: number;
            });
            get length(): number;
            set length(value: number);
            static fromObject(data: {
                length?: number;
            }): _Found;
            toObject(): {
                length?: number;
            };
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Found;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Found;
        }
        class _Missing extends pb_1.Message {
            #private;
            constructor(data?: any[] | {});
            static fromObject(data: {}): _Missing;
            toObject(): {};
            serialize(): Uint8Array;
            serialize(w: pb_1.BinaryWriter): void;
            static deserialize(bytes: Uint8Array | pb_1.BinaryReader): _Missing;
            serializeBinary(): Uint8Array;
            static deserializeBinary(bytes: Uint8Array): _Missing;
        }
    }
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    export abstract class UnimplementedScsService {
        static definition: {
            Get: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _GetRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _GetRequest;
                responseSerialize: (message: _GetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _GetResponse;
            };
            GetBatch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _GetBatchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _GetBatchRequest;
                responseSerialize: (message: _GetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _GetResponse;
            };
            Set: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetRequest;
                responseSerialize: (message: _SetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetResponse;
            };
            SetBatch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetBatchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetBatchRequest;
                responseSerialize: (message: _SetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetResponse;
            };
            SetIfNotExists: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetIfNotExistsRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetIfNotExistsRequest;
                responseSerialize: (message: _SetIfNotExistsResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetIfNotExistsResponse;
            };
            Delete: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DeleteRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DeleteRequest;
                responseSerialize: (message: _DeleteResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DeleteResponse;
            };
            KeysExist: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _KeysExistRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _KeysExistRequest;
                responseSerialize: (message: _KeysExistResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _KeysExistResponse;
            };
            Increment: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _IncrementRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _IncrementRequest;
                responseSerialize: (message: _IncrementResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _IncrementResponse;
            };
            UpdateTtl: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _UpdateTtlRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _UpdateTtlRequest;
                responseSerialize: (message: _UpdateTtlResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _UpdateTtlResponse;
            };
            ItemGetTtl: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ItemGetTtlRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ItemGetTtlRequest;
                responseSerialize: (message: _ItemGetTtlResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ItemGetTtlResponse;
            };
            ItemGetType: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ItemGetTypeRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ItemGetTypeRequest;
                responseSerialize: (message: _ItemGetTypeResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ItemGetTypeResponse;
            };
            DictionaryGet: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionaryGetRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionaryGetRequest;
                responseSerialize: (message: _DictionaryGetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionaryGetResponse;
            };
            DictionaryFetch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionaryFetchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionaryFetchRequest;
                responseSerialize: (message: _DictionaryFetchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionaryFetchResponse;
            };
            DictionarySet: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionarySetRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionarySetRequest;
                responseSerialize: (message: _DictionarySetResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionarySetResponse;
            };
            DictionaryIncrement: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionaryIncrementRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionaryIncrementRequest;
                responseSerialize: (message: _DictionaryIncrementResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionaryIncrementResponse;
            };
            DictionaryDelete: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionaryDeleteRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionaryDeleteRequest;
                responseSerialize: (message: _DictionaryDeleteResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionaryDeleteResponse;
            };
            DictionaryLength: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _DictionaryLengthRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _DictionaryLengthRequest;
                responseSerialize: (message: _DictionaryLengthResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _DictionaryLengthResponse;
            };
            SetFetch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetFetchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetFetchRequest;
                responseSerialize: (message: _SetFetchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetFetchResponse;
            };
            SetSample: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetSampleRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetSampleRequest;
                responseSerialize: (message: _SetSampleResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetSampleResponse;
            };
            SetUnion: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetUnionRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetUnionRequest;
                responseSerialize: (message: _SetUnionResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetUnionResponse;
            };
            SetDifference: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetDifferenceRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetDifferenceRequest;
                responseSerialize: (message: _SetDifferenceResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetDifferenceResponse;
            };
            SetContains: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetContainsRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetContainsRequest;
                responseSerialize: (message: _SetContainsResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetContainsResponse;
            };
            SetLength: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetLengthRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetLengthRequest;
                responseSerialize: (message: _SetLengthResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetLengthResponse;
            };
            SetPop: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SetPopRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SetPopRequest;
                responseSerialize: (message: _SetPopResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SetPopResponse;
            };
            ListPushFront: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListPushFrontRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListPushFrontRequest;
                responseSerialize: (message: _ListPushFrontResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListPushFrontResponse;
            };
            ListPushBack: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListPushBackRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListPushBackRequest;
                responseSerialize: (message: _ListPushBackResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListPushBackResponse;
            };
            ListPopFront: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListPopFrontRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListPopFrontRequest;
                responseSerialize: (message: _ListPopFrontResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListPopFrontResponse;
            };
            ListPopBack: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListPopBackRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListPopBackRequest;
                responseSerialize: (message: _ListPopBackResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListPopBackResponse;
            };
            ListErase: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListEraseRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListEraseRequest;
                responseSerialize: (message: _ListEraseResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListEraseResponse;
            };
            ListRemove: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListRemoveRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListRemoveRequest;
                responseSerialize: (message: _ListRemoveResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListRemoveResponse;
            };
            ListFetch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListFetchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListFetchRequest;
                responseSerialize: (message: _ListFetchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListFetchResponse;
            };
            ListLength: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListLengthRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListLengthRequest;
                responseSerialize: (message: _ListLengthResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListLengthResponse;
            };
            ListConcatenateFront: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListConcatenateFrontRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListConcatenateFrontRequest;
                responseSerialize: (message: _ListConcatenateFrontResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListConcatenateFrontResponse;
            };
            ListConcatenateBack: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListConcatenateBackRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListConcatenateBackRequest;
                responseSerialize: (message: _ListConcatenateBackResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListConcatenateBackResponse;
            };
            ListRetain: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _ListRetainRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _ListRetainRequest;
                responseSerialize: (message: _ListRetainResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _ListRetainResponse;
            };
            SortedSetPut: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetPutRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetPutRequest;
                responseSerialize: (message: _SortedSetPutResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetPutResponse;
            };
            SortedSetFetch: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetFetchRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetFetchRequest;
                responseSerialize: (message: _SortedSetFetchResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetFetchResponse;
            };
            SortedSetGetScore: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetGetScoreRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetGetScoreRequest;
                responseSerialize: (message: _SortedSetGetScoreResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetGetScoreResponse;
            };
            SortedSetRemove: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetRemoveRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetRemoveRequest;
                responseSerialize: (message: _SortedSetRemoveResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetRemoveResponse;
            };
            SortedSetIncrement: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetIncrementRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetIncrementRequest;
                responseSerialize: (message: _SortedSetIncrementResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetIncrementResponse;
            };
            SortedSetGetRank: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetGetRankRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetGetRankRequest;
                responseSerialize: (message: _SortedSetGetRankResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetGetRankResponse;
            };
            SortedSetLength: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetLengthRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetLengthRequest;
                responseSerialize: (message: _SortedSetLengthResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetLengthResponse;
            };
            SortedSetLengthByScore: {
                path: string;
                requestStream: boolean;
                responseStream: boolean;
                requestSerialize: (message: _SortedSetLengthByScoreRequest) => Buffer;
                requestDeserialize: (bytes: Buffer) => _SortedSetLengthByScoreRequest;
                responseSerialize: (message: _SortedSetLengthByScoreResponse) => Buffer;
                responseDeserialize: (bytes: Buffer) => _SortedSetLengthByScoreResponse;
            };
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Get(call: grpc_1.ServerUnaryCall<_GetRequest, _GetResponse>, callback: grpc_1.sendUnaryData<_GetResponse>): void;
        abstract GetBatch(call: grpc_1.ServerWritableStream<_GetBatchRequest, _GetResponse>): void;
        abstract Set(call: grpc_1.ServerUnaryCall<_SetRequest, _SetResponse>, callback: grpc_1.sendUnaryData<_SetResponse>): void;
        abstract SetBatch(call: grpc_1.ServerWritableStream<_SetBatchRequest, _SetResponse>): void;
        abstract SetIfNotExists(call: grpc_1.ServerUnaryCall<_SetIfNotExistsRequest, _SetIfNotExistsResponse>, callback: grpc_1.sendUnaryData<_SetIfNotExistsResponse>): void;
        abstract Delete(call: grpc_1.ServerUnaryCall<_DeleteRequest, _DeleteResponse>, callback: grpc_1.sendUnaryData<_DeleteResponse>): void;
        abstract KeysExist(call: grpc_1.ServerUnaryCall<_KeysExistRequest, _KeysExistResponse>, callback: grpc_1.sendUnaryData<_KeysExistResponse>): void;
        abstract Increment(call: grpc_1.ServerUnaryCall<_IncrementRequest, _IncrementResponse>, callback: grpc_1.sendUnaryData<_IncrementResponse>): void;
        abstract UpdateTtl(call: grpc_1.ServerUnaryCall<_UpdateTtlRequest, _UpdateTtlResponse>, callback: grpc_1.sendUnaryData<_UpdateTtlResponse>): void;
        abstract ItemGetTtl(call: grpc_1.ServerUnaryCall<_ItemGetTtlRequest, _ItemGetTtlResponse>, callback: grpc_1.sendUnaryData<_ItemGetTtlResponse>): void;
        abstract ItemGetType(call: grpc_1.ServerUnaryCall<_ItemGetTypeRequest, _ItemGetTypeResponse>, callback: grpc_1.sendUnaryData<_ItemGetTypeResponse>): void;
        abstract DictionaryGet(call: grpc_1.ServerUnaryCall<_DictionaryGetRequest, _DictionaryGetResponse>, callback: grpc_1.sendUnaryData<_DictionaryGetResponse>): void;
        abstract DictionaryFetch(call: grpc_1.ServerUnaryCall<_DictionaryFetchRequest, _DictionaryFetchResponse>, callback: grpc_1.sendUnaryData<_DictionaryFetchResponse>): void;
        abstract DictionarySet(call: grpc_1.ServerUnaryCall<_DictionarySetRequest, _DictionarySetResponse>, callback: grpc_1.sendUnaryData<_DictionarySetResponse>): void;
        abstract DictionaryIncrement(call: grpc_1.ServerUnaryCall<_DictionaryIncrementRequest, _DictionaryIncrementResponse>, callback: grpc_1.sendUnaryData<_DictionaryIncrementResponse>): void;
        abstract DictionaryDelete(call: grpc_1.ServerUnaryCall<_DictionaryDeleteRequest, _DictionaryDeleteResponse>, callback: grpc_1.sendUnaryData<_DictionaryDeleteResponse>): void;
        abstract DictionaryLength(call: grpc_1.ServerUnaryCall<_DictionaryLengthRequest, _DictionaryLengthResponse>, callback: grpc_1.sendUnaryData<_DictionaryLengthResponse>): void;
        abstract SetFetch(call: grpc_1.ServerUnaryCall<_SetFetchRequest, _SetFetchResponse>, callback: grpc_1.sendUnaryData<_SetFetchResponse>): void;
        abstract SetSample(call: grpc_1.ServerUnaryCall<_SetSampleRequest, _SetSampleResponse>, callback: grpc_1.sendUnaryData<_SetSampleResponse>): void;
        abstract SetUnion(call: grpc_1.ServerUnaryCall<_SetUnionRequest, _SetUnionResponse>, callback: grpc_1.sendUnaryData<_SetUnionResponse>): void;
        abstract SetDifference(call: grpc_1.ServerUnaryCall<_SetDifferenceRequest, _SetDifferenceResponse>, callback: grpc_1.sendUnaryData<_SetDifferenceResponse>): void;
        abstract SetContains(call: grpc_1.ServerUnaryCall<_SetContainsRequest, _SetContainsResponse>, callback: grpc_1.sendUnaryData<_SetContainsResponse>): void;
        abstract SetLength(call: grpc_1.ServerUnaryCall<_SetLengthRequest, _SetLengthResponse>, callback: grpc_1.sendUnaryData<_SetLengthResponse>): void;
        abstract SetPop(call: grpc_1.ServerUnaryCall<_SetPopRequest, _SetPopResponse>, callback: grpc_1.sendUnaryData<_SetPopResponse>): void;
        abstract ListPushFront(call: grpc_1.ServerUnaryCall<_ListPushFrontRequest, _ListPushFrontResponse>, callback: grpc_1.sendUnaryData<_ListPushFrontResponse>): void;
        abstract ListPushBack(call: grpc_1.ServerUnaryCall<_ListPushBackRequest, _ListPushBackResponse>, callback: grpc_1.sendUnaryData<_ListPushBackResponse>): void;
        abstract ListPopFront(call: grpc_1.ServerUnaryCall<_ListPopFrontRequest, _ListPopFrontResponse>, callback: grpc_1.sendUnaryData<_ListPopFrontResponse>): void;
        abstract ListPopBack(call: grpc_1.ServerUnaryCall<_ListPopBackRequest, _ListPopBackResponse>, callback: grpc_1.sendUnaryData<_ListPopBackResponse>): void;
        abstract ListErase(call: grpc_1.ServerUnaryCall<_ListEraseRequest, _ListEraseResponse>, callback: grpc_1.sendUnaryData<_ListEraseResponse>): void;
        abstract ListRemove(call: grpc_1.ServerUnaryCall<_ListRemoveRequest, _ListRemoveResponse>, callback: grpc_1.sendUnaryData<_ListRemoveResponse>): void;
        abstract ListFetch(call: grpc_1.ServerUnaryCall<_ListFetchRequest, _ListFetchResponse>, callback: grpc_1.sendUnaryData<_ListFetchResponse>): void;
        abstract ListLength(call: grpc_1.ServerUnaryCall<_ListLengthRequest, _ListLengthResponse>, callback: grpc_1.sendUnaryData<_ListLengthResponse>): void;
        abstract ListConcatenateFront(call: grpc_1.ServerUnaryCall<_ListConcatenateFrontRequest, _ListConcatenateFrontResponse>, callback: grpc_1.sendUnaryData<_ListConcatenateFrontResponse>): void;
        abstract ListConcatenateBack(call: grpc_1.ServerUnaryCall<_ListConcatenateBackRequest, _ListConcatenateBackResponse>, callback: grpc_1.sendUnaryData<_ListConcatenateBackResponse>): void;
        abstract ListRetain(call: grpc_1.ServerUnaryCall<_ListRetainRequest, _ListRetainResponse>, callback: grpc_1.sendUnaryData<_ListRetainResponse>): void;
        abstract SortedSetPut(call: grpc_1.ServerUnaryCall<_SortedSetPutRequest, _SortedSetPutResponse>, callback: grpc_1.sendUnaryData<_SortedSetPutResponse>): void;
        abstract SortedSetFetch(call: grpc_1.ServerUnaryCall<_SortedSetFetchRequest, _SortedSetFetchResponse>, callback: grpc_1.sendUnaryData<_SortedSetFetchResponse>): void;
        abstract SortedSetGetScore(call: grpc_1.ServerUnaryCall<_SortedSetGetScoreRequest, _SortedSetGetScoreResponse>, callback: grpc_1.sendUnaryData<_SortedSetGetScoreResponse>): void;
        abstract SortedSetRemove(call: grpc_1.ServerUnaryCall<_SortedSetRemoveRequest, _SortedSetRemoveResponse>, callback: grpc_1.sendUnaryData<_SortedSetRemoveResponse>): void;
        abstract SortedSetIncrement(call: grpc_1.ServerUnaryCall<_SortedSetIncrementRequest, _SortedSetIncrementResponse>, callback: grpc_1.sendUnaryData<_SortedSetIncrementResponse>): void;
        abstract SortedSetGetRank(call: grpc_1.ServerUnaryCall<_SortedSetGetRankRequest, _SortedSetGetRankResponse>, callback: grpc_1.sendUnaryData<_SortedSetGetRankResponse>): void;
        abstract SortedSetLength(call: grpc_1.ServerUnaryCall<_SortedSetLengthRequest, _SortedSetLengthResponse>, callback: grpc_1.sendUnaryData<_SortedSetLengthResponse>): void;
        abstract SortedSetLengthByScore(call: grpc_1.ServerUnaryCall<_SortedSetLengthByScoreRequest, _SortedSetLengthByScoreResponse>, callback: grpc_1.sendUnaryData<_SortedSetLengthByScoreResponse>): void;
    }
    const ScsClient_base: grpc_1.ServiceClientConstructor;
    export class ScsClient extends ScsClient_base {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>);
        Get: GrpcUnaryServiceInterface<_GetRequest, _GetResponse>;
        GetBatch: GrpcStreamServiceInterface<_GetBatchRequest, _GetBatchRequest>;
        Set: GrpcUnaryServiceInterface<_SetRequest, _SetResponse>;
        SetBatch: GrpcStreamServiceInterface<_SetBatchRequest, _SetBatchRequest>;
        SetIfNotExists: GrpcUnaryServiceInterface<_SetIfNotExistsRequest, _SetIfNotExistsResponse>;
        Delete: GrpcUnaryServiceInterface<_DeleteRequest, _DeleteResponse>;
        KeysExist: GrpcUnaryServiceInterface<_KeysExistRequest, _KeysExistResponse>;
        Increment: GrpcUnaryServiceInterface<_IncrementRequest, _IncrementResponse>;
        UpdateTtl: GrpcUnaryServiceInterface<_UpdateTtlRequest, _UpdateTtlResponse>;
        ItemGetTtl: GrpcUnaryServiceInterface<_ItemGetTtlRequest, _ItemGetTtlResponse>;
        ItemGetType: GrpcUnaryServiceInterface<_ItemGetTypeRequest, _ItemGetTypeResponse>;
        DictionaryGet: GrpcUnaryServiceInterface<_DictionaryGetRequest, _DictionaryGetResponse>;
        DictionaryFetch: GrpcUnaryServiceInterface<_DictionaryFetchRequest, _DictionaryFetchResponse>;
        DictionarySet: GrpcUnaryServiceInterface<_DictionarySetRequest, _DictionarySetResponse>;
        DictionaryIncrement: GrpcUnaryServiceInterface<_DictionaryIncrementRequest, _DictionaryIncrementResponse>;
        DictionaryDelete: GrpcUnaryServiceInterface<_DictionaryDeleteRequest, _DictionaryDeleteResponse>;
        DictionaryLength: GrpcUnaryServiceInterface<_DictionaryLengthRequest, _DictionaryLengthResponse>;
        SetFetch: GrpcUnaryServiceInterface<_SetFetchRequest, _SetFetchResponse>;
        SetSample: GrpcUnaryServiceInterface<_SetSampleRequest, _SetSampleResponse>;
        SetUnion: GrpcUnaryServiceInterface<_SetUnionRequest, _SetUnionResponse>;
        SetDifference: GrpcUnaryServiceInterface<_SetDifferenceRequest, _SetDifferenceResponse>;
        SetContains: GrpcUnaryServiceInterface<_SetContainsRequest, _SetContainsResponse>;
        SetLength: GrpcUnaryServiceInterface<_SetLengthRequest, _SetLengthResponse>;
        SetPop: GrpcUnaryServiceInterface<_SetPopRequest, _SetPopResponse>;
        ListPushFront: GrpcUnaryServiceInterface<_ListPushFrontRequest, _ListPushFrontResponse>;
        ListPushBack: GrpcUnaryServiceInterface<_ListPushBackRequest, _ListPushBackResponse>;
        ListPopFront: GrpcUnaryServiceInterface<_ListPopFrontRequest, _ListPopFrontResponse>;
        ListPopBack: GrpcUnaryServiceInterface<_ListPopBackRequest, _ListPopBackResponse>;
        ListErase: GrpcUnaryServiceInterface<_ListEraseRequest, _ListEraseResponse>;
        ListRemove: GrpcUnaryServiceInterface<_ListRemoveRequest, _ListRemoveResponse>;
        ListFetch: GrpcUnaryServiceInterface<_ListFetchRequest, _ListFetchResponse>;
        ListLength: GrpcUnaryServiceInterface<_ListLengthRequest, _ListLengthResponse>;
        ListConcatenateFront: GrpcUnaryServiceInterface<_ListConcatenateFrontRequest, _ListConcatenateFrontResponse>;
        ListConcatenateBack: GrpcUnaryServiceInterface<_ListConcatenateBackRequest, _ListConcatenateBackResponse>;
        ListRetain: GrpcUnaryServiceInterface<_ListRetainRequest, _ListRetainResponse>;
        SortedSetPut: GrpcUnaryServiceInterface<_SortedSetPutRequest, _SortedSetPutResponse>;
        SortedSetFetch: GrpcUnaryServiceInterface<_SortedSetFetchRequest, _SortedSetFetchResponse>;
        SortedSetGetScore: GrpcUnaryServiceInterface<_SortedSetGetScoreRequest, _SortedSetGetScoreResponse>;
        SortedSetRemove: GrpcUnaryServiceInterface<_SortedSetRemoveRequest, _SortedSetRemoveResponse>;
        SortedSetIncrement: GrpcUnaryServiceInterface<_SortedSetIncrementRequest, _SortedSetIncrementResponse>;
        SortedSetGetRank: GrpcUnaryServiceInterface<_SortedSetGetRankRequest, _SortedSetGetRankResponse>;
        SortedSetLength: GrpcUnaryServiceInterface<_SortedSetLengthRequest, _SortedSetLengthResponse>;
        SortedSetLengthByScore: GrpcUnaryServiceInterface<_SortedSetLengthByScoreRequest, _SortedSetLengthByScoreResponse>;
    }
    export {};
}
