import { getEnv } from "@llamaindex/env";
import _ from "lodash";
import { Portkey } from "portkey-ai";
export class PortkeySession {
    portkey;
    constructor(options = {}){
        if (!options.apiKey) {
            options.apiKey = getEnv("PORTKEY_API_KEY");
        }
        if (!options.baseURL) {
            options.baseURL = getEnv("PORTKEY_BASE_URL") ?? "https://api.portkey.ai";
        }
        this.portkey = new Portkey({});
        this.portkey.llms = [
            {}
        ];
        if (!options.apiKey) {
            throw new Error("Set Portkey ApiKey in PORTKEY_API_KEY env variable");
        }
        this.portkey = new Portkey(options);
    }
}
const defaultPortkeySession = [];
/**
 * Get a session for the Portkey API. If one already exists with the same options,
 * it will be returned. Otherwise, a new session will be created.
 * @param options
 * @returns
 */ export function getPortkeySession(options = {}) {
    let session = defaultPortkeySession.find((session)=>{
        return _.isEqual(session.options, options);
    })?.session;
    if (!session) {
        session = new PortkeySession(options);
        defaultPortkeySession.push({
            session,
            options
        });
    }
    return session;
}
