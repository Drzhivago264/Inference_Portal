import type { BaseNode, Metadata } from "../Node.js";
import type { NodeParser } from "./types.js";
export declare class MarkdownNodeParser implements NodeParser {
    includeMetadata: boolean;
    includePrevNextRel: boolean;
    constructor(init?: {
        includeMetadata?: boolean;
        includePrevNextRel?: boolean;
    });
    transform(nodes: BaseNode[], _options?: any): Promise<BaseNode[]>;
    static fromDefaults(init?: {
        includeMetadata?: boolean;
        includePrevNextRel?: boolean;
    }): MarkdownNodeParser;
    buildNodeFromSplit(textSplit: string, node: BaseNode<Metadata>, metadata: Metadata): BaseNode<Metadata>;
    updateMetadata(headersMetadata: Metadata, newHeader: string, newHeaderLevel: number): Metadata;
    getNodesFromNode(node: BaseNode<Metadata>): BaseNode<Metadata>[];
    getNodesFromDocuments(documents: BaseNode<Metadata>[]): BaseNode<Metadata>[];
}
