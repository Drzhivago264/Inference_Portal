import type { GenericFileSystem } from "@llamaindex/env";
import type { ParseConfig } from "papaparse";
import { Document } from "../Node.js";
import type { FileReader } from "./type.js";
/**
 * papaparse-based csv parser
 * @class CSVReader
 * @implements BaseReader
 */
export declare class PapaCSVReader implements FileReader {
    private concatRows;
    private colJoiner;
    private rowJoiner;
    private papaConfig?;
    /**
     * Constructs a new instance of the class.
     * @param {boolean} [concatRows=true] - whether to concatenate all rows into one document.If set to False, a Document will be created for each row.True by default.
     * @param {string} [colJoiner=', '] - Separator to use for joining cols per row. Set to ", " by default.
     * @param {string} [rowJoiner='\n'] - Separator to use for joining each row.Only used when `concat_rows=True`.Set to "\n" by default.
     */
    constructor(concatRows?: boolean, colJoiner?: string, rowJoiner?: string, papaConfig?: ParseConfig);
    /**
     * Loads data from csv files
     * @param {string} file - The path to the file to load.
     * @param {GenericFileSystem} [fs=DEFAULT_FS] - The file system to use for reading the file.
     * @returns {Promise<Document[]>}
     */
    loadData(file: string, fs?: GenericFileSystem): Promise<Document[]>;
}
