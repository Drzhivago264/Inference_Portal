import type { PlatformApi, PlatformApiClient } from "@llamaindex/cloud";
import type { NodeWithScore } from "../Node.js";
import type { BaseRetriever, RetrieveParams } from "../Retriever.js";
import type { ServiceContext } from "../ServiceContext.js";
import type { ClientParams, CloudConstructorParams } from "./types.js";
export type CloudRetrieveParams = Omit<PlatformApi.RetrievalParams, "query" | "searchFilters" | "pipelineId" | "className"> & {
    similarityTopK?: number;
};
export declare class LlamaCloudRetriever implements BaseRetriever {
    client?: PlatformApiClient;
    clientParams: ClientParams;
    retrieveParams: CloudRetrieveParams;
    projectName: string;
    pipelineName: string;
    serviceContext: ServiceContext;
    private resultNodesToNodeWithScore;
    constructor(params: CloudConstructorParams & CloudRetrieveParams);
    private getClient;
    retrieve({ query, parentEvent, preFilters, }: RetrieveParams): Promise<NodeWithScore[]>;
    getServiceContext(): ServiceContext;
}
