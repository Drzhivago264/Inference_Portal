/** Byte length of a SHA1 digest. */
export declare const BYTES: number;
/**  A class representation of the SHA1 algorithm. */
export declare class SHA1 {
    readonly hashSize: number;
    private _buf;
    private _bufIdx;
    private _count;
    private _K;
    private _H;
    private _finalized;
    /** Creates a SHA1 instance. */
    constructor();
    /** Reduces the four input numbers to a single one. */
    protected static F(t: number, b: number, c: number, d: number): number;
    /** Initializes a hash instance. */
    init(): SHA1;
    /** Updates a hash with additional message data. */
    update(msg: string | Uint8Array, inputEncoding?: string): SHA1;
    /** Finalizes a hash with additional message data. */
    digest(outputEncoding?: string): string | Uint8Array;
    /** Performs one transformation cycle. */
    private transform;
}
/** Generates a SHA1 hash of the input data. */
export declare function sha1(msg: string | Uint8Array, inputEncoding?: string, outputEncoding?: string): string | Uint8Array;
