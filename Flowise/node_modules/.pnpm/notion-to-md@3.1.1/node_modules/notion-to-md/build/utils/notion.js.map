{"version":3,"file":"notion.js","sourceRoot":"","sources":["../../src/utils/notion.ts"],"names":[],"mappings":";;;AAIO,MAAM,gBAAgB,GAAG,KAAK,EACnC,YAAoB,EACpB,QAAgB,EAChB,SAAwB,EACxB,EAAE;IACF,IAAI,MAAM,GAAqC,EAAE,CAAC;IAClD,IAAI,SAAS,GAAG,CAAC,CAAC;IAClB,IAAI,YAAY,GAAG,SAAS,CAAC;IAE7B,GAAG;QACD,MAAM,QAAQ,GAAG,CAAC,MAAM,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;YACxD,YAAY,EAAE,YAAY;YAC1B,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAA8B,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEjC,YAAY,GAAG,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,WAAW,CAAC;QACrC,SAAS,IAAI,CAAC,CAAC;KAChB,QACC,YAAY,IAAI,IAAI;QACpB,CAAC,SAAS,IAAI,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,EAC5C;IAEF,IAAA,gCAAwB,EAAC,MAAM,CAAC,CAAC;IACjC,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAzBW,QAAA,gBAAgB,oBAyB3B;AAEK,MAAM,wBAAwB,GAAG,CACtC,MAAwC,EACxC,EAAE;IACF,IAAI,iBAAiB,GAAG,CAAC,CAAC;IAE1B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;QAC1B,IAAI,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,oBAAoB,EAAE;YAC1D,cAAc;YACd,aAAa;YACb,KAAK,CAAC,kBAAkB,CAAC,MAAM,GAAG,EAAE,iBAAiB,CAAC;SACvD;aAAM;YACL,iBAAiB,GAAG,CAAC,CAAC;SACvB;KACF;AACH,CAAC,CAAC;AAdW,QAAA,wBAAwB,4BAcnC","sourcesContent":["import { Client } from \"@notionhq/client\";\nimport { ListBlockChildrenResponse } from \"@notionhq/client/build/src/api-endpoints\";\nimport { ListBlockChildrenResponseResults } from \"../types\";\n\nexport const getBlockChildren = async (\n  notionClient: Client,\n  block_id: string,\n  totalPage: number | null\n) => {\n  let result: ListBlockChildrenResponseResults = [];\n  let pageCount = 0;\n  let start_cursor = undefined;\n\n  do {\n    const response = (await notionClient.blocks.children.list({\n      start_cursor: start_cursor,\n      block_id: block_id,\n    })) as ListBlockChildrenResponse;\n    result.push(...response.results);\n\n    start_cursor = response?.next_cursor;\n    pageCount += 1;\n  } while (\n    start_cursor != null &&\n    (totalPage == null || pageCount < totalPage)\n  );\n\n  modifyNumberedListObject(result);\n  return result;\n};\n\nexport const modifyNumberedListObject = (\n  blocks: ListBlockChildrenResponseResults\n) => {\n  let numberedListIndex = 0;\n\n  for (const block of blocks) {\n    if (\"type\" in block && block.type === \"numbered_list_item\") {\n      // add numbers\n      // @ts-ignore\n      block.numbered_list_item.number = ++numberedListIndex;\n    } else {\n      numberedListIndex = 0;\n    }\n  }\n};\n"]}