# Generated by Django 5.0.7 on 2024-08-06 12:54

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Crypto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coin", models.TextField()),
                ("address", models.TextField()),
                ("balance", models.FloatField(default=0.0)),
                ("coin_usd_rate", models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name="InstructionTreeMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("code", models.TextField()),
                ("instruct", models.TextField(default="", max_length=128000)),
                ("default_child", models.BooleanField(default=False)),
                ("default_editor_template", models.TextField(default="")),
                ("path", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LLM",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("base", models.CharField(blank=True, max_length=255, null=True)),
                ("size", models.IntegerField(default=1)),
                ("desc", models.TextField()),
                ("chat_template", models.TextField(default="")),
                ("input_price", models.FloatField(default=0.0)),
                ("output_price", models.FloatField(default=0.0)),
                ("agent_availability", models.BooleanField(default=False)),
                ("is_self_host", models.BooleanField(default=True)),
                ("context_length", models.IntegerField(default=8192)),
                ("max_history_length", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("desc", models.TextField(blank=True, verbose_name="Description")),
                ("quantity", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="APIKEY",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("prefix", models.CharField(editable=False, max_length=8, unique=True)),
                ("hashed_key", models.CharField(editable=False, max_length=150)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "name",
                    models.CharField(
                        default=None,
                        help_text="A free-form name for the API key. Need not be unique. 50 characters max.",
                        max_length=50,
                    ),
                ),
                (
                    "revoked",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Once API key expires, clients cannot use it anymore.",
                        null=True,
                        verbose_name="Expires",
                    ),
                ),
                ("credit", models.FloatField(default=0.0)),
                ("monero_credit", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("integrated_address", models.TextField(max_length=400)),
                ("payment_id", models.TextField(max_length=400)),
                ("ratelimit", models.TextField(default="5000/minute")),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Master API Key",
                "verbose_name_plural": "Master API Keys",
            },
        ),
        migrations.CreateModel(
            name="Dataset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                (
                    "default_system_prompt",
                    models.TextField(default="", max_length=128000),
                ),
                ("default_evaluation", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DatasetRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("system_prompt", models.TextField()),
                ("prompt", models.TextField(blank=True, max_length=128000, null=True)),
                (
                    "response",
                    models.TextField(blank=True, max_length=128000, null=True),
                ),
                ("evaluation", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dataset",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.dataset"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FineGrainAPIKEY",
            fields=[
                (
                    "id",
                    models.CharField(
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("prefix", models.CharField(editable=False, max_length=8, unique=True)),
                ("hashed_key", models.CharField(editable=False, max_length=150)),
                ("created", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "name",
                    models.CharField(
                        default=None,
                        help_text="A free-form name for the API key. Need not be unique. 50 characters max.",
                        max_length=50,
                    ),
                ),
                (
                    "revoked",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)",
                    ),
                ),
                (
                    "expiry_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Once API key expires, clients cannot use it anymore.",
                        null=True,
                        verbose_name="Expires",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "ttl",
                    models.DurationField(
                        default=datetime.timedelta(days=10), null=True
                    ),
                ),
                ("first_three_char", models.TextField(default="???")),
                ("last_three_char", models.TextField(default="???")),
                ("ratelimit", models.TextField(default="30/minute")),
                (
                    "master_key",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.apikey",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "FineGrain API Key",
                "verbose_name_plural": "FineGrain API Keys",
            },
        ),
        migrations.CreateModel(
            name="InferenceServer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("instance_type", models.CharField(max_length=255)),
                ("url", models.URLField(max_length=255)),
                ("alternative_url", models.URLField(max_length=255)),
                ("public_ip", models.GenericIPAddressField()),
                ("private_ip", models.GenericIPAddressField()),
                ("status", models.CharField(default="off", max_length=255)),
                (
                    "last_message_time",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "availability",
                    models.CharField(default="Not Available", max_length=255),
                ),
                (
                    "hosted_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.llm"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MemoryTreeMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("prompt", models.TextField()),
                ("response", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "chatbot"),
                            (2, "chatbot_api"),
                            (3, "agent"),
                            (4, "agent_api"),
                            (5, "toolbox"),
                            (6, "toolbox_api"),
                            (7, "data_synthesis"),
                        ],
                        default=1,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("is_session_start_node", models.BooleanField(default=False)),
                ("path", models.TextField(max_length=220000, unique=True)),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.apikey"
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.llm"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PaymentHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField(default=0.0)),
                ("integrated_address", models.CharField(max_length=400)),
                ("payment_id", models.CharField(max_length=400)),
                ("transaction_hash", models.CharField(max_length=400)),
                ("locked", models.BooleanField()),
                ("block_height", models.IntegerField(default=0)),
                (
                    "crypto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.crypto"
                    ),
                ),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.apikey"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Price",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.product"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromptResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prompt", models.TextField()),
                ("response", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "chatbot"),
                            (2, "chatbot_api"),
                            (3, "agent"),
                            (4, "agent_api"),
                            (5, "toolbox"),
                            (6, "toolbox_api"),
                            (7, "data_synthesis"),
                        ],
                        default=1,
                    ),
                ),
                ("input_cost", models.FloatField(default=0.0)),
                ("output_cost", models.FloatField(default=0.0)),
                ("number_input_tokens", models.IntegerField(default=0)),
                ("number_output_tokens", models.IntegerField(default=0)),
                (
                    "key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.apikey"
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="server.llm"
                    ),
                ),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="UserInstructionTreeMP",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("code", models.TextField()),
                ("instruct", models.TextField(default="", max_length=128000)),
                ("default_child", models.BooleanField(default=False)),
                ("default_editor_template", models.TextField(default="")),
                ("path", models.CharField(max_length=255, unique=True)),
                ("displayed_name", models.TextField(default="")),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
